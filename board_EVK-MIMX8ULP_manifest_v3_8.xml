<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_board_EVK-MIMX8ULP" name="SDK 2.11.1 JENKINS board_EVK-MIMX8ULP" brief="This is SDK version 2.11.1 manifest file." format_version="3.8" api_version="2.0.0" configuration="37bbf4eb706f3814bfad8f3a27525c83" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.8.xsd">
  <!--Timestamp (UTC): 2022-03-10 11:37:47.491988-->
  <!--This manifest is generated based on sdk repo commit: 7f8fd68e8a4a1dbacf50bdfa40edd9352d0d70da-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="com.crt.advproject.config.exe.debug"/>
    <definition extID="com.crt.advproject.config.exe.release"/>
  </externalDefinitions>
  <ksdk id="MCUXpressoSDK2111" name="MCUXpressoSDK2111" version="2.11.1"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <toolchainSettings/>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="10.2.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="9.10.2" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
  </toolchains>
  <boards>
    <board id="evkmimx8ulp" name="EVK-MIMX8ULP" href="" version="1.0.0" package="MIMX8UD7DVP10">
      <description>Evaluation Kit for the i.MX 8ULP Applications Processor</description>
      <image path="." type="image">
        <files mask=""/>
      </image>
      <examples>
        <example id="evkmimx8ulp_acmp_interrupt_print" name="acmp_interrupt_print" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkmimx8ulp/driver_examples/acmp/interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/acmp/interrupt" type="xml">
            <files mask="acmp_interrupt_print_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_acmp_polling_print" name="acmp_polling_print" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkmimx8ulp/driver_examples/acmp/polling">
          <external path="boards/evkmimx8ulp/driver_examples/acmp/polling" type="xml">
            <files mask="acmp_polling_print_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_canfd_interrupt_transfer" name="canfd_interrupt_transfer" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkmimx8ulp/driver_examples/canfd/interrupt_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/canfd/interrupt_transfer" type="xml">
            <files mask="canfd_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_canfd_loopback" name="canfd_loopback" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkmimx8ulp/driver_examples/canfd/loopback">
          <external path="boards/evkmimx8ulp/driver_examples/canfd/loopback" type="xml">
            <files mask="canfd_loopback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_canfd_loopback_transfer" name="canfd_loopback_transfer" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkmimx8ulp/driver_examples/canfd/loopback_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/canfd/loopback_transfer" type="xml">
            <files mask="canfd_loopback_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_canfd_ping_pong_buffer_transfer" name="canfd_ping_pong_buffer_transfer" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkmimx8ulp/driver_examples/canfd/ping_pong_buffer_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/canfd/ping_pong_buffer_transfer" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_casper" name="casper" brief="The CASPER Example project is a demonstration program that uses the KSDK software to calculate RSA." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/casper" path="boards/evkmimx8ulp/driver_examples/casper">
          <external path="boards/evkmimx8ulp/driver_examples/casper" type="xml">
            <files mask="casper_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpi2c_edma_b2b_transfer_master" name="cmsis_lpi2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkmimx8ulp/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpi2c_edma_b2b_transfer_slave" name="cmsis_lpi2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkmimx8ulp/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpi2c_int_b2b_transfer_master" name="cmsis_lpi2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkmimx8ulp/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpi2c_int_b2b_transfer_slave" name="cmsis_lpi2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkmimx8ulp/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpspi_edma_b2b_transfer_master" name="cmsis_lpspi_edma_b2b_transfer_master" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkmimx8ulp/cmsis_driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpspi_edma_b2b_transfer_slave" name="cmsis_lpspi_edma_b2b_transfer_slave" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkmimx8ulp/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpspi_int_b2b_transfer_master" name="cmsis_lpspi_int_b2b_transfer_master" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkmimx8ulp/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpspi_int_b2b_transfer_slave" name="cmsis_lpspi_int_b2b_transfer_slave" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkmimx8ulp/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/evkmimx8ulp/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/evkmimx8ulp/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="boards/evkmimx8ulp/cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dac12_basic" name="dac12_basic" brief="The dac12_basic example shows how to use DAC12 module simply as the general DAC12 converter.When the DAC12's fifo feature is not enabled, Any write to the DATA register will replace thedata in the buffer and push data to analog conversion without trigger support.In this example, it gets the value from terminal,outputs the DAC12 output voltage through DAC12 output pin." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/dac12" path="boards/evkmimx8ulp/driver_examples/dac12/basic">
          <external path="boards/evkmimx8ulp/driver_examples/dac12/basic" type="xml">
            <files mask="dac12_basic_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dac12_fifo_interrupt" name="dac12_fifo_interrupt" brief="The dac12_fifo_interrupt example shows how to use DAC12 FIFO interrupt.When the DAC12 FIFO watermark interrupt is enabled firstly, the application would enter the DAC12 ISR immediately, since remaining FIFO data is less than the watermark. Then the FIFO would be feed inside the ISR. Then the DAC12 interrupt could be restrained. Once the DAC12 FIFO is triggered in while loop, the data in FIFO is read out, then it becomes less than the watermark, so the FIFO would be feed again in DAC12 ISR. With this example, user can define the DAC12 output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC12 would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/dac12" path="boards/evkmimx8ulp/driver_examples/dac12/fifo_interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/dac12/fifo_interrupt" type="xml">
            <files mask="dac12_fifo_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dma3_memory_to_memory" name="dma3_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkmimx8ulp/driver_examples/edma/memory_to_memory">
          <external path="boards/evkmimx8ulp/driver_examples/edma/memory_to_memory" type="xml">
            <files mask="dma3_memory_to_memory_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dma3_scatter_gather" name="dma3_scatter_gather" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkmimx8ulp/driver_examples/edma/scatter_gather">
          <external path="boards/evkmimx8ulp/driver_examples/edma/scatter_gather" type="xml">
            <files mask="dma3_scatter_gather_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_hello_world_usart_cm33" name="dsp_hello_world_usart_cm33" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimx8ulp/dsp_examples/hello_world_usart/cm33">
          <external path="boards/evkmimx8ulp/dsp_examples/hello_world_usart/cm33" type="xml">
            <files mask="dsp_hello_world_usart_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_mu_interrupt_cm33" name="dsp_mu_interrupt_cm33" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimx8ulp/dsp_examples/mu_interrupt/cm33">
          <external path="boards/evkmimx8ulp/dsp_examples/mu_interrupt/cm33" type="xml">
            <files mask="dsp_mu_interrupt_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_mu_polling_cm33" name="dsp_mu_polling_cm33" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimx8ulp/dsp_examples/mu_polling/cm33">
          <external path="boards/evkmimx8ulp/dsp_examples/mu_polling/cm33" type="xml">
            <files mask="dsp_mu_polling_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_pdm_sai_cm33" name="dsp_pdm_sai_cm33" brief="The dsp_pdm_sai demo application demonstrates running pdm-&gt;sai audio path on dsp core." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimx8ulp/dsp_examples/pdm_sai/cm33">
          <external path="boards/evkmimx8ulp/dsp_examples/pdm_sai/cm33" type="xml">
            <files mask="dsp_pdm_sai_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_dsp_sema42_cm33" name="dsp_sema42_cm33" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimx8ulp/dsp_examples/sema42/cm33">
          <external path="boards/evkmimx8ulp/dsp_examples/sema42/cm33" type="xml">
            <files mask="dsp_sema42_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_epdc" name="epdc" brief="This example shows how to use the PXP to process pixels, apply waveform mode then use the EPDC to drive the E-INK panel. In this example, first an image of RGB888 pixel format is processed by PXP to generate Y4 pixel data. Then PXP waveform engine will apply the waveform mode 2 to the pixel data for EPDC to update high quality image to the screen. The same image is updated to screen 4 times on different locations. Collision shall occur and non-collided update(s) will appear on screen together within one fresh, the collided update(s) will wait until the previous update(s) to finish then refresh. Next the panel is cleared and PXP waveform engine will constantly apply the waveform mode 1 to black dot for EPDC to draw line on panel to simulate pen input. The update shall be non-flashy and quicker than image update." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="demo_apps/epdc" path="boards/evkmimx8ulp/demo_apps/epdc">
          <external path="boards/evkmimx8ulp/demo_apps/epdc" type="xml">
            <files mask="epdc_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_ewm" name="ewm" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/ewm" path="boards/evkmimx8ulp/driver_examples/ewm">
          <external path="boards/evkmimx8ulp/driver_examples/ewm" type="xml">
            <files mask="ewm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_efifo_edma_transfer" name="flexcan_efifo_edma_transfer" brief="The flexcan_efifo_edma_transfer example shows how to use the EDMA version transactional driver to receive CAN FD Message from Enhanced Rx FIFO:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal. When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO and read them out using EDMA version FlexCAN transactional driver. The send and received message will be print out to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimx8ulp/driver_examples/flexcan/efifo_edma_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexcan/efifo_edma_transfer" type="xml">
            <files mask="flexcan_efifo_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_efifo_interrupt_transfer" name="flexcan_efifo_interrupt_transfer" brief="flexcan_efifo_interrupt_transfer example shows how to use FlexCAN Enhanced Rx FIFO in none-blocking interrupt way:In this example, when set ENABLE_LOOPBACK macro, only one board is needed. The example will config one FlexCAN Message Buffer to Tx Message Buffer and setup Enhanced Rx FIFO. After that, the example will send 4 CAN FD Messages from Tx Message Buffer to Enhanced Rx FIFO through internal loopback interconnect. The send and received message will be print out to terminal When not define ENABLE_LOOPBACK, need 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B receive the message by Enhanced Rx FIFO, and print the message content to terminal after receive 4 CAN FD messages." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimx8ulp/driver_examples/flexcan/efifo_interrupt_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexcan/efifo_interrupt_transfer" type="xml">
            <files mask="flexcan_efifo_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_interrupt_transfer" name="flexcan_interrupt_transfer" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimx8ulp/driver_examples/flexcan/interrupt_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_loopback" name="flexcan_loopback" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimx8ulp/driver_examples/flexcan/loopback">
          <external path="boards/evkmimx8ulp/driver_examples/flexcan/loopback" type="xml">
            <files mask="flexcan_loopback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_loopback_edma_transfer" name="flexcan_loopback_edma_transfer" brief="The flexcan_loopback_edma example shows how to use the EDMA version transactional driver to receiveCAN Message from Rx FIFO:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Tx Message Buffer and also setup Rx FIFO. After that, the example will send 4 CAN Messagesfrom Tx Message Buffer to Rx FIFO through internal loopback interconnect and read them out usingEDMA version FlexCAN transactional driver. The Sent and received message will be print out to terminalat last." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimx8ulp/driver_examples/flexcan/loopback_edma_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexcan/loopback_edma_transfer" type="xml">
            <files mask="flexcan_loopback_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_loopback_transfer" name="flexcan_loopback_transfer" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimx8ulp/driver_examples/flexcan/loopback_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_ping_pong_buffer_transfer" name="flexcan_ping_pong_buffer_transfer" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimx8ulp/driver_examples/flexcan/ping_pong_buffer_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexcan/ping_pong_buffer_transfer" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexcan_pretended_networking_wakeup" name="flexcan_pretended_networking_wakeup" brief="The flexcan_pretended_networking_wakeup example shows how to wake up FLEXCAN module from Pretended Networking mode:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message to Endpoint B(board B) when user press space key in terminal. Endpoint B will wake up from STOP mode after receive 4 specific frame, and print the message content to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimx8ulp/driver_examples/flexcan/pretended_networking_wakeup">
          <external path="boards/evkmimx8ulp/driver_examples/flexcan/pretended_networking_wakeup" type="xml">
            <files mask="flexcan_pretended_networking_wakeup_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_i2c_interrupt_lpi2c_transfer" name="flexio_i2c_interrupt_lpi2c_transfer" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_i2c_read_accel_value_transfer" name="flexio_i2c_read_accel_value_transfer" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/i2c/read_accel_value_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/i2c/read_accel_value_transfer" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_pwm" name="flexio_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/pwm">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_spi_edma_lpspi_transfer_master" name="flexio_spi_edma_lpspi_transfer_master" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/spi/edma_lpspi_transfer/master">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/spi/edma_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_spi_edma_lpspi_transfer_slave" name="flexio_spi_edma_lpspi_transfer_slave" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/spi/edma_lpspi_transfer/slave">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/spi/edma_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_spi_int_lpspi_transfer_master" name="flexio_spi_int_lpspi_transfer_master" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/spi/int_lpspi_transfer/master">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_spi_int_lpspi_transfer_slave" name="flexio_spi_int_lpspi_transfer_slave" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/spi/int_lpspi_transfer/slave">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_uart_edma_transfer" name="flexio_uart_edma_transfer" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/uart/edma_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/uart/edma_transfer" type="xml">
            <files mask="flexio_uart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_uart_int_rb_transfer" name="flexio_uart_int_rb_transfer" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/uart/int_rb_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/uart/int_rb_transfer" type="xml">
            <files mask="flexio_uart_int_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_uart_interrupt_transfer" name="flexio_uart_interrupt_transfer" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/uart/interrupt_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexio_uart_polling_transfer" name="flexio_uart_polling_transfer" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimx8ulp/driver_examples/flexio/uart/polling_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexspi_octal_dma3_transfer" name="flexspi_octal_dma3_transfer" brief="The flexspi_octal_dma3_transfer example shows how to use flexspi driver with dma. In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimx8ulp/driver_examples/flexspi/octal/edma_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexspi/octal/edma_transfer" type="xml">
            <files mask="flexspi_octal_dma3_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexspi_octal_polling_transfer" name="flexspi_octal_polling_transfer" brief="The flexspi_octal_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimx8ulp/driver_examples/flexspi/octal/polling_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexspi/octal/polling_transfer" type="xml">
            <files mask="flexspi_octal_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexspi_psram_edma_transfer" name="flexspi_psram_edma_transfer" brief="The flexspi_psram_edma_transfer example shows how to use flexspi driver with dma: In this example, flexspi will send data and operate the external PSRAM connected with FLEXSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimx8ulp/driver_examples/flexspi/psram/edma_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexspi/psram/edma_transfer" type="xml">
            <files mask="flexspi_psram_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_flexspi_psram_polling_transfer" name="flexspi_psram_polling_transfer" brief="The flexspi_psram_polling_transfer example shows how to use flexspi driver with polling: In this example, flexspi will send data and operate the external PSRAM connected with FLEXSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimx8ulp/driver_examples/flexspi/psram/polling_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/flexspi/psram/polling_transfer" type="xml">
            <files mask="flexspi_psram_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_event">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_generic">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_hello">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_lpspi_b2b_master" name="freertos_lpspi_b2b_master" brief="The freertos_lpspi_b2b_master example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_lpspi_b2b/master">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_lpspi_b2b/master" type="xml">
            <files mask="freertos_lpspi_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_lpspi_b2b_slave" name="freertos_lpspi_b2b_slave" brief="The freertos_lpspi_b2b_slave example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_lpspi_b2b/slave">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_lpspi_b2b/slave" type="xml">
            <files mask="freertos_lpspi_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_lpuart" name="freertos_lpuart" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_lpuart">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_lpuart" type="xml">
            <files mask="freertos_lpuart_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_mutex">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_queue">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_sem">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8ulp/rtos_examples/freertos_swtimer">
          <external path="boards/evkmimx8ulp/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimx8ulp/demo_apps/hello_world">
          <external path="boards/evkmimx8ulp/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_hello_world_ns" name="hello_world_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimx8ulp_hello_world_s" path="boards/evkmimx8ulp/trustzone_examples/hello_world/hello_world_ns">
          <external path="boards/evkmimx8ulp/trustzone_examples/hello_world/hello_world_ns" type="xml">
            <files mask="hello_world_ns_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_hello_world_s" name="hello_world_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimx8ulp_hello_world_ns" path="boards/evkmimx8ulp/trustzone_examples/hello_world/hello_world_s">
          <external path="boards/evkmimx8ulp/trustzone_examples/hello_world/hello_world_s" type="xml">
            <files mask="hello_world_s_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_i3c_master_read_sensor_lsm6dso" name="i3c_master_read_sensor_lsm6dso" brief="The i3c_master_read_sensor_lsm6dso example shows how to use i3c driver as master to communicate with sensor LSM6DSO" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimx8ulp/driver_examples/i3c/master_read_sensor_lsm6dso">
          <external path="boards/evkmimx8ulp/driver_examples/i3c/master_read_sensor_lsm6dso" type="xml">
            <files mask="i3c_master_read_sensor_lsm6dso_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lcdif_cursor_argb" name="lcdif_cursor_argb" brief="This example demonstrates how to use the LCDIF cursor in ARGB8888 mode. In this exapmle, the screen is devided into two parts: red and blue. A cursor is moving in the screen, the cursor alpha value changes during moving." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimx8ulp/driver_examples/lcdif/cursor_argb">
          <external path="boards/evkmimx8ulp/driver_examples/lcdif/cursor_argb" type="xml">
            <files mask="lcdif_cursor_argb_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lcdif_cursor_masked" name="lcdif_cursor_masked" brief="This example demonstrates how to use the LCDIF cursor in masked mode." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimx8ulp/driver_examples/lcdif/cursor_masked">
          <external path="boards/evkmimx8ulp/driver_examples/lcdif/cursor_masked" type="xml">
            <files mask="lcdif_cursor_masked_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lcdif_gamma" name="lcdif_gamma" brief="This example demonstrates how to use the LCDIF gamma correction feature. In this example, the gamma corretion table is set to invert the original picture. The original picture is gradual changed gray bars, the gamma correction is continuously enabled and disabled, so you can see the screen switch between the original picture and the inverted picture." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimx8ulp/driver_examples/lcdif/gamma">
          <external path="boards/evkmimx8ulp/driver_examples/lcdif/gamma" type="xml">
            <files mask="lcdif_gamma_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lcdif_rgb565" name="lcdif_rgb565" brief="This example demonstrates how to use the LCDIF driver to show the RGB565 format frame buffer. When the example runs, a rectangle is moving in the screen, and its color changes when touch border." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimx8ulp/driver_examples/lcdif/rgb565">
          <external path="boards/evkmimx8ulp/driver_examples/lcdif/rgb565" type="xml">
            <files mask="lcdif_rgb565_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_interrupt" name="lpadc_interrupt" brief="The lpdc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimx8ulp/driver_examples/lpadc/interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/lpadc/interrupt" type="xml">
            <files mask="lpadc_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_polling" name="lpadc_polling" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimx8ulp/driver_examples/lpadc/polling">
          <external path="boards/evkmimx8ulp/driver_examples/lpadc/polling" type="xml">
            <files mask="lpadc_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_single_interrupt" name="lpadc_single_interrupt" brief="The lpadc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimx8ulp/driver_examples/lpadc/single_interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/lpadc/single_interrupt" type="xml">
            <files mask="lpadc_single_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_single_polling" name="lpadc_single_polling" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimx8ulp/driver_examples/lpadc/single_polling">
          <external path="boards/evkmimx8ulp/driver_examples/lpadc/single_polling" type="xml">
            <files mask="lpadc_single_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpadc_temperature_measurement" name="lpadc_temperature_measurement" brief="The lpadc_temperature_measurement example shows how to measure the temperature within the internal sensor. In this example, the ADC input channel is mapped to an internal temperature sensor. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value. In ADC ISR, the watermark flag would be cleared by reading the conversion result value. When the conversion done, two valid result will be put in the FIFO, then the temperature can be calculated within the two results and a specific formula." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimx8ulp/driver_examples/lpadc/temperature_measurement">
          <external path="boards/evkmimx8ulp/driver_examples/lpadc/temperature_measurement" type="xml">
            <files mask="lpadc_temperature_measurement_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_edma_b2b_transfer_master" name="lpi2c_edma_b2b_transfer_master" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimx8ulp/driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_edma_b2b_transfer_slave" name="lpi2c_edma_b2b_transfer_slave" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimx8ulp/driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_interrupt_b2b_transfer_master" name="lpi2c_interrupt_b2b_transfer_master" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimx8ulp/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_interrupt_b2b_transfer_slave" name="lpi2c_interrupt_b2b_transfer_slave" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimx8ulp/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_polling_b2b_master" name="lpi2c_polling_b2b_master" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimx8ulp/driver_examples/lpi2c/polling_b2b/master">
          <external path="boards/evkmimx8ulp/driver_examples/lpi2c/polling_b2b/master" type="xml">
            <files mask="lpi2c_polling_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_polling_b2b_slave" name="lpi2c_polling_b2b_slave" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimx8ulp/driver_examples/lpi2c/polling_b2b/slave">
          <external path="boards/evkmimx8ulp/driver_examples/lpi2c/polling_b2b/slave" type="xml">
            <files mask="lpi2c_polling_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpi2c_read_accel_value_transfer" name="lpi2c_read_accel_value_transfer" brief="The lpi2c_read_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimx8ulp/driver_examples/lpi2c/read_accel_value_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/lpi2c/read_accel_value_transfer" type="xml">
            <files mask="lpi2c_read_accel_value_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpit_single_channel" name="lpit_single_channel" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpit" path="boards/evkmimx8ulp/driver_examples/lpit/single_channel">
          <external path="boards/evkmimx8ulp/driver_examples/lpit/single_channel" type="xml">
            <files mask="lpit_single_channel_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_edma_b2b_transfer_master" name="lpspi_edma_b2b_transfer_master" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimx8ulp/driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_edma_b2b_transfer_slave" name="lpspi_edma_b2b_transfer_slave" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimx8ulp/driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_interrupt_b2b_master" name="lpspi_interrupt_b2b_master" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b/master">
          <external path="boards/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_interrupt_b2b_slave" name="lpspi_interrupt_b2b_slave" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="boards/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_interrupt_b2b_transfer_master" name="lpspi_interrupt_b2b_transfer_master" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_interrupt_b2b_transfer_slave" name="lpspi_interrupt_b2b_transfer_slave" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/driver_examples/lpspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_polling_b2b_transfer_master" name="lpspi_polling_b2b_transfer_master" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimx8ulp/driver_examples/lpspi/polling_b2b_transfer/master">
          <external path="boards/evkmimx8ulp/driver_examples/lpspi/polling_b2b_transfer/master" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpspi_polling_b2b_transfer_slave" name="lpspi_polling_b2b_transfer_slave" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimx8ulp/driver_examples/lpspi/polling_b2b_transfer/slave">
          <external path="boards/evkmimx8ulp/driver_examples/lpspi/polling_b2b_transfer/slave" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lptmr" name="lptmr" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lptmr" path="boards/evkmimx8ulp/driver_examples/lptmr">
          <external path="boards/evkmimx8ulp/driver_examples/lptmr" type="xml">
            <files mask="lptmr_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimx8ulp/driver_examples/lpuart/edma_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimx8ulp/driver_examples/lpuart/interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimx8ulp/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimx8ulp/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimx8ulp/driver_examples/lpuart/polling">
          <external path="boards/evkmimx8ulp/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_mrt_example" name="mrt_example" brief="The MRT project is a simple demonstration program of the SDK MRT driver. It sets up the MRThardware block to trigger a periodic interrupt after every 250 milliseconds. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/mrt" path="boards/evkmimx8ulp/driver_examples/mrt">
          <external path="boards/evkmimx8ulp/driver_examples/mrt" type="xml">
            <files mask="mrt_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_edma_transfer" name="pdm_edma_transfer" brief="pdm_edma_transfer" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8ulp/driver_examples/pdm/pdm_edma_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/pdm/pdm_edma_transfer" type="xml">
            <files mask="pdm_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_hwvad" name="pdm_hwvad" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8ulp/driver_examples/pdm/pdm_hwvad">
          <external path="boards/evkmimx8ulp/driver_examples/pdm/pdm_hwvad" type="xml">
            <files mask="pdm_hwvad_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_interrupt" name="pdm_interrupt" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8ulp/driver_examples/pdm/pdm_interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/pdm/pdm_interrupt" type="xml">
            <files mask="pdm_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_sai_edma" name="pdm_sai_edma" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8ulp/driver_examples/pdm/pdm_sai_edma">
          <external path="boards/evkmimx8ulp/driver_examples/pdm/pdm_sai_edma" type="xml">
            <files mask="pdm_sai_edma_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_sai_interrupt" name="pdm_sai_interrupt" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8ulp/driver_examples/pdm/pdm_sai_interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/pdm/pdm_sai_interrupt" type="xml">
            <files mask="pdm_sai_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pdm_sai_interrupt_transfer" name="pdm_sai_interrupt_transfer" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8ulp/driver_examples/pdm/pdm_sai_interrupt_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/pdm/pdm_sai_interrupt_transfer" type="xml">
            <files mask="pdm_sai_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_power_mode_switch" name="power_mode_switch" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimx8ulp/demo_apps/power_mode_switch">
          <external path="boards/evkmimx8ulp/demo_apps/power_mode_switch" type="xml">
            <files mask="power_mode_switch_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_fft" name="powerquad_benchmark_fft" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_fft to show the PowerQuad performance improvement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_fft">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_fft" type="xml">
            <files mask="powerquad_benchmark_fft_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_filter" name="powerquad_benchmark_filter" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_filter to show the PowerQuad performance improvement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_filter">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_filter" type="xml">
            <files mask="powerquad_benchmark_filter_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_math" name="powerquad_benchmark_math" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_math to show the PowerQuad performance improvement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_math">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_math" type="xml">
            <files mask="powerquad_benchmark_math_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_matrix" name="powerquad_benchmark_matrix" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_matrix to show the PowerQuad performance improvement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_matrix">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_matrix" type="xml">
            <files mask="powerquad_benchmark_matrix_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_sw_fft" name="powerquad_benchmark_sw_fft" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_fft to show the PowerQuad performance improvement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_fft">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_fft" type="xml">
            <files mask="powerquad_benchmark_sw_fft_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_sw_filter" name="powerquad_benchmark_sw_filter" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_filter to show the PowerQuad performance improvement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_filter">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_filter" type="xml">
            <files mask="powerquad_benchmark_sw_filter_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_sw_math" name="powerquad_benchmark_sw_math" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_math to show the PowerQuad performance improvement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_math">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_math" type="xml">
            <files mask="powerquad_benchmark_sw_math_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_sw_matrix" name="powerquad_benchmark_sw_matrix" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_matrix to show the PowerQuad performance improvement." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_matrix">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_sw_matrix" type="xml">
            <files mask="powerquad_benchmark_sw_matrix_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_benchmark_vector" name="powerquad_benchmark_vector" brief="This example shows the PowerQuad based CMSIS DSP function performance." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_vector">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/benchmark_vector" type="xml">
            <files mask="powerquad_benchmark_vector_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_cmsis" name="powerquad_cmsis" brief="This example shows how to use powerquad driver CMSIS DSP compatible functions." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/cmsis">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/cmsis" type="xml">
            <files mask="powerquad_cmsis_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_filter" name="powerquad_filter" brief="This example shows how to use powerquad driver filter functions." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/filter">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/filter" type="xml">
            <files mask="powerquad_filter_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_fir_fast" name="powerquad_fir_fast" brief="The PowerQuad fetches data from system RAM and private RAM through different path, for the calcutations which need data from two parts of memory, such as FIR, convolve, correlate, and some matrix operations, place the input data B in private RAM improves the performance. PowerQuad private RAM starts from address 0xe0000000, the first 4KByte is used by PowerQuad driver, the RAM starts from 0xe0001000 could be used by user for optimization. In this example, the FIR taps, convolve input data B, and correlate input data B are not changed, so they are converted to float format and saved to private RAM at the beginning. If the example runs successfully, the performance using optimized method is better than the nornal method." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/fir_fast">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/fir_fast" type="xml">
            <files mask="powerquad_fir_fast_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_math" name="powerquad_math" brief="This example project shows how to use the powerquad driver math functions." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/math">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/math" type="xml">
            <files mask="powerquad_math_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_matrix" name="powerquad_matrix" brief="This example shows how to use powerquad driver matrix functions." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/matrix">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/matrix" type="xml">
            <files mask="powerquad_matrix_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_powerquad_transform" name="powerquad_transform" brief="This example shows how to use powerquad driver transform functions." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimx8ulp/driver_examples/powerquad/transform">
          <external path="boards/evkmimx8ulp/driver_examples/powerquad/transform" type="xml">
            <files mask="powerquad_transform_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_blend" name="pxp_blend" brief="The PXP blend project shows how to blend process surface and alpha surface usingPXP. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkmimx8ulp/driver_examples/pxp/blend">
          <external path="boards/evkmimx8ulp/driver_examples/pxp/blend" type="xml">
            <files mask="pxp_blend_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_color_key" name="pxp_color_key" brief="The PXP color key project shows how to use the AS color key together with the alpha blend. In this example, the AS pixel format is RGB565, the global alpha is used for alpha blend." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkmimx8ulp/driver_examples/pxp/color_key">
          <external path="boards/evkmimx8ulp/driver_examples/pxp/color_key" type="xml">
            <files mask="pxp_color_key_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_copy_pic" name="pxp_copy_pic" brief="The PXP copy_pic project shows how to use the PXP to copy image from one buffer to another buffer." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkmimx8ulp/driver_examples/pxp/copy_pic">
          <external path="boards/evkmimx8ulp/driver_examples/pxp/copy_pic" type="xml">
            <files mask="pxp_copy_pic_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_flip" name="pxp_flip" brief="The PXP flip project shows how to use the PXP flip function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The flip mode is changing." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkmimx8ulp/driver_examples/pxp/flip">
          <external path="boards/evkmimx8ulp/driver_examples/pxp/flip" type="xml">
            <files mask="pxp_flip_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_porter_duff" name="pxp_porter_duff" brief="This example shows how to use the PXP Porter Duff compositing. In this example, A blue rectangle is in the left up corner of the destination surface (also named PS surface, or s0 in reference mannal). A red rectangle is in the center of the source surface (also named AS surface, or s1 in reference mannal). When press any key in the terminal, the Porter Duff mode changes and the panel shows the result." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkmimx8ulp/driver_examples/pxp/porter_duff">
          <external path="boards/evkmimx8ulp/driver_examples/pxp/porter_duff" type="xml">
            <files mask="pxp_porter_duff_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_rotate" name="pxp_rotate" brief="The PXP rotate project shows how to use the PXP rotate function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkmimx8ulp/driver_examples/pxp/rotate">
          <external path="boards/evkmimx8ulp/driver_examples/pxp/rotate" type="xml">
            <files mask="pxp_rotate_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_pxp_scale" name="pxp_scale" brief="The PXP scale project shows how to use the PXP scale function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The square size is changing." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkmimx8ulp/driver_examples/pxp/scale">
          <external path="boards/evkmimx8ulp/driver_examples/pxp/scale" type="xml">
            <files mask="pxp_scale_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_rgpio_input_interrupt" name="rgpio_input_interrupt" brief="The RGPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the button to control/toggle the LED." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/rgpio" path="boards/evkmimx8ulp/driver_examples/rgpio/input_interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/rgpio/input_interrupt" type="xml">
            <files mask="rgpio_input_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_rgpio_led_output" name="rgpio_led_output" brief="The RGPIO Example project is a demonstration program that uses the SDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/rgpio" path="boards/evkmimx8ulp/driver_examples/rgpio/led_output">
          <external path="boards/evkmimx8ulp/driver_examples/rgpio/led_output" type="xml">
            <files mask="rgpio_led_output_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_rpmsg_lite_pingpong_rtos_linux_remote" name="rpmsg_lite_pingpong_rtos_linux_remote" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkmimx8ulp/multicore_examples/rpmsg_lite_pingpong_rtos/linux_remote">
          <external path="boards/evkmimx8ulp/multicore_examples/rpmsg_lite_pingpong_rtos/linux_remote" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_linux_remote_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_rpmsg_lite_str_echo_rtos_imxcm33" name="rpmsg_lite_str_echo_rtos_imxcm33" brief="The Multicore RPMsg-Lite string echo project is a simple demonstration program that uses the MCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system.It works with Linux RPMsg master peer to transfer string content back and forth. The name servicehandshake is performed first to create the communication channels. Next, Linux OS waits for userinput to the RPMsg virtual tty. Anything which is received is sent to M33. M33 displays what is received, and echoes back the same message as an acknowledgement. The tty reader on the Linux side can get the message, and start another transaction. The demo demonstrates RPMsg’s ability to send arbitrary content back and forth. Note: The maximum message length supported by RPMsg is now 496 bytes. String longer than 496 will be divided by virtual tty into several messages.Shared memory usage:this multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkmimx8ulp/multicore_examples/rpmsg_lite_str_echo_rtos">
          <external path="boards/evkmimx8ulp/multicore_examples/rpmsg_lite_str_echo_rtos" type="xml">
            <files mask="rpmsg_lite_str_echo_rtos_imxcm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sai_edma_transfer" name="sai_edma_transfer" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimx8ulp/driver_examples/sai/edma_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/sai/edma_transfer" type="xml">
            <files mask="sai_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sai_interrupt" name="sai_interrupt" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimx8ulp/driver_examples/sai/interrupt">
          <external path="boards/evkmimx8ulp/driver_examples/sai/interrupt" type="xml">
            <files mask="sai_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimx8ulp/driver_examples/sai/interrupt_transfer">
          <external path="boards/evkmimx8ulp/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_secure_faults_trdc_ns" name="secure_faults_trdc_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimx8ulp_secure_faults_trdc_s" path="boards/evkmimx8ulp/trustzone_examples/secure_faults_trdc/secure_faults_trdc_ns">
          <external path="boards/evkmimx8ulp/trustzone_examples/secure_faults_trdc/secure_faults_trdc_ns" type="xml">
            <files mask="secure_faults_trdc_ns_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_secure_faults_trdc_s" name="secure_faults_trdc_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimx8ulp_secure_faults_trdc_ns" path="boards/evkmimx8ulp/trustzone_examples/secure_faults_trdc/secure_faults_trdc_s">
          <external path="boards/evkmimx8ulp/trustzone_examples/secure_faults_trdc/secure_faults_trdc_s" type="xml">
            <files mask="secure_faults_trdc_s_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_secure_rgpio_ns" name="secure_rgpio_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimx8ulp_secure_rgpio_s" path="boards/evkmimx8ulp/trustzone_examples/secure_rgpio/secure_rgpio_ns">
          <external path="boards/evkmimx8ulp/trustzone_examples/secure_rgpio/secure_rgpio_ns" type="xml">
            <files mask="secure_rgpio_ns_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_secure_rgpio_s" name="secure_rgpio_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimx8ulp_secure_rgpio_ns" path="boards/evkmimx8ulp/trustzone_examples/secure_rgpio/secure_rgpio_s">
          <external path="boards/evkmimx8ulp/trustzone_examples/secure_rgpio/secure_rgpio_s" type="xml">
            <files mask="secure_rgpio_s_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_sema42_uboot" name="sema42_uboot" brief="The sema42 uboot example shows how to use SEMA42 driver to lock and unlock a sema gate.This example should work together with uboot. This example runs on Cortex-M core,the uboot runs on the Cortex-A core." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sema42" path="boards/evkmimx8ulp/driver_examples/sema42/uboot">
          <external path="boards/evkmimx8ulp/driver_examples/sema42/uboot" type="xml">
            <files mask="sema42_uboot_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_combine_pwm" name="tpm_combine_pwm" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/evkmimx8ulp/driver_examples/tpm/combine_pwm">
          <external path="boards/evkmimx8ulp/driver_examples/tpm/combine_pwm" type="xml">
            <files mask="tpm_combine_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_dual_edge_capture" name="tpm_dual_edge_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/evkmimx8ulp/driver_examples/tpm/dual_edge_capture">
          <external path="boards/evkmimx8ulp/driver_examples/tpm/dual_edge_capture" type="xml">
            <files mask="tpm_dual_edge_capture_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_input_capture" name="tpm_input_capture" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/evkmimx8ulp/driver_examples/tpm/input_capture">
          <external path="boards/evkmimx8ulp/driver_examples/tpm/input_capture" type="xml">
            <files mask="tpm_input_capture_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_output_compare" name="tpm_output_compare" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/evkmimx8ulp/driver_examples/tpm/output_compare">
          <external path="boards/evkmimx8ulp/driver_examples/tpm/output_compare" type="xml">
            <files mask="tpm_output_compare_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_pwm_twochannel" name="tpm_pwm_twochannel" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/evkmimx8ulp/driver_examples/tpm/pwm_twochannel">
          <external path="boards/evkmimx8ulp/driver_examples/tpm/pwm_twochannel" type="xml">
            <files mask="tpm_pwm_twochannel_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_simple_pwm" name="tpm_simple_pwm" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/evkmimx8ulp/driver_examples/tpm/simple_pwm">
          <external path="boards/evkmimx8ulp/driver_examples/tpm/simple_pwm" type="xml">
            <files mask="tpm_simple_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tpm_timer" name="tpm_timer" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/evkmimx8ulp/driver_examples/tpm/timer">
          <external path="boards/evkmimx8ulp/driver_examples/tpm/timer" type="xml">
            <files mask="tpm_timer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_trdc" name="trdc" brief="The trdc example shows how to control the memory block checker(MBC) and memory region checker(MRC) access policy using TRDC. In this example, a MRC memory region and a MBC memory block are set to unaccessible, then the hardfault occurs." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/trdc" path="boards/evkmimx8ulp/driver_examples/trdc">
          <external path="boards/evkmimx8ulp/driver_examples/trdc" type="xml">
            <files mask="trdc_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_tstmr" name="tstmr" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tstmr" path="boards/evkmimx8ulp/driver_examples/tstmr">
          <external path="boards/evkmimx8ulp/driver_examples/tstmr" type="xml">
            <files mask="tstmr_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8ulp_wdog32" name="wdog32" brief="The WDOG32 Example project is to demonstrate usage of the KSDK wdog32 driver.In this example, fast testing is first implemented to test the wdog32.After this, refreshing the watchdog in None-window mode and window mode is executed.Note wdog32 is disabled in SystemInit function which means wdog32 is disabledafter chip emerges from reset." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/wdog32" path="boards/evkmimx8ulp/driver_examples/wdog32">
          <external path="boards/evkmimx8ulp/driver_examples/wdog32" type="xml">
            <files mask="wdog32_v3_8.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MIMX8UD7xxx10" name="MIMX8UD7" version="1.0.0" full_name="MIMX8UD7xxx10" family="MIMX8UDx" platform="i.MX">
      <description>i.MX 8ULP: Cortex-A33 and Cortex-M33, HiFi4 and FusionF1 DSP, ultra low-power, 2D/3D graphics</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="compatible_device.segger" value="MIMX8UD7_M33"/>
        <metadata key="compatible_device.pemicro" value="MIMX8UD7"/>
        <metadata key="vendor.device.multicore" value="true"/>
      </metadataSet>
      <core id="cm33_MIMX8UD7xxx10" name="cm33" fpu="true" type="cm33" boot_role="primary" dsp="true"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX8UD7xxx10" name="SRAM_UPPER" addr="20000000" size="00080000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX8UD7xxx10" name="SRAM_LOWER" addr="0ffc0000" size="00040000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="768"/>
      <package id="MIMX8UD7DVP10" name="MIMX8UD7DVP10"/>
      <package id="MIMX8UD7DVK10" name="MIMX8UD7DVK10"/>
      <evaluation_boards>
        <evaluation_board name="evkmimx8ulp"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMX8UD7xxx10" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX8UD7xxx10" name="internal.has_swo" value="true"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.evkmimx8ulp.MIMX8UD7" name="evkmimx8ulp" brief="Board_project_template evkmimx8ulp" version="1.0.0" full_name="Board_project_template evkmimx8ulp" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/evkmimx8ulp/project_template" project_base_path="board">
      <defines>
        <define name="FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMX8UD7"/>
          <component_dependency value="component.lpuart_adapter.MIMX8UD7"/>
          <component_dependency value="platform.drivers.iomuxc.MIMX8UD7"/>
          <component_dependency value="platform.drivers.reset.MIMX8UD7"/>
          <component_dependency value="platform.devices.MIMX8UD7_startup.MIMX8UD7"/>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.rgpio.MIMX8UD7"/>
          <component_dependency value="platform.drivers.fusion.MIMX8UD7"/>
          <component_dependency value="platform.drivers.clock.MIMX8UD7"/>
          <component_dependency value="platform.drivers.upower.MIMX8UD7"/>
          <component_dependency value="platform.drivers.flexspi.MIMX8UD7"/>
          <component_dependency value="platform.drivers.cache_cache64.MIMX8UD7"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMX8UD7"/>
              <component_dependency value="component.serial_manager.MIMX8UD7"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MIMX8UD7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Library.MIMX8UD7" name="CMSIS_DSP_Library" brief="CMSIS-DSP Library for Cortex-M, SC000, and SC300" version="1.7.0" full_name="CMSIS DSP Library" devices="MIMX8UD7xxx10" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="Lib/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="libarm_ARMv8MMLldfsp_math.a"/>
      </source>
      <source toolchain="iar" relative_path="Lib/IAR" project_relative_path="./" type="lib" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="iar_ARMv8MMLldfsp_math.a"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="CMSIS_DSP_Library_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMX8UD7" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library for Cortex-M, SC000, and SC300" version="1.7.0" full_name="CMSIS DSP Library Source" devices="MIMX8UD7xxx10" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c" hidden="true"/>
        <files mask="arm_abs_q15.c" hidden="true"/>
        <files mask="arm_abs_q31.c" hidden="true"/>
        <files mask="arm_abs_q7.c" hidden="true"/>
        <files mask="arm_add_f32.c" hidden="true"/>
        <files mask="arm_add_q15.c" hidden="true"/>
        <files mask="arm_add_q31.c" hidden="true"/>
        <files mask="arm_add_q7.c" hidden="true"/>
        <files mask="arm_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_dot_prod_q7.c" hidden="true"/>
        <files mask="arm_mult_f32.c" hidden="true"/>
        <files mask="arm_mult_q15.c" hidden="true"/>
        <files mask="arm_mult_q31.c" hidden="true"/>
        <files mask="arm_mult_q7.c" hidden="true"/>
        <files mask="arm_negate_f32.c" hidden="true"/>
        <files mask="arm_negate_q15.c" hidden="true"/>
        <files mask="arm_negate_q31.c" hidden="true"/>
        <files mask="arm_negate_q7.c" hidden="true"/>
        <files mask="arm_offset_f32.c" hidden="true"/>
        <files mask="arm_offset_q15.c" hidden="true"/>
        <files mask="arm_offset_q31.c" hidden="true"/>
        <files mask="arm_offset_q7.c" hidden="true"/>
        <files mask="arm_scale_f32.c" hidden="true"/>
        <files mask="arm_scale_q15.c" hidden="true"/>
        <files mask="arm_scale_q31.c" hidden="true"/>
        <files mask="arm_scale_q7.c" hidden="true"/>
        <files mask="arm_shift_q15.c" hidden="true"/>
        <files mask="arm_shift_q31.c" hidden="true"/>
        <files mask="arm_shift_q7.c" hidden="true"/>
        <files mask="arm_sub_f32.c" hidden="true"/>
        <files mask="arm_sub_q15.c" hidden="true"/>
        <files mask="arm_sub_q31.c" hidden="true"/>
        <files mask="arm_sub_q7.c" hidden="true"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c" hidden="true"/>
        <files mask="arm_const_structs.c" hidden="true"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q15.c" hidden="true"/>
        <files mask="arm_cmplx_conj_q31.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_f32.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q15.c" hidden="true"/>
        <files mask="arm_cmplx_dot_prod_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mag_squared_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_f32.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q15.c" hidden="true"/>
        <files mask="arm_cmplx_mult_real_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c" hidden="true"/>
        <files mask="arm_pid_init_q15.c" hidden="true"/>
        <files mask="arm_pid_init_q31.c" hidden="true"/>
        <files mask="arm_pid_reset_f32.c" hidden="true"/>
        <files mask="arm_pid_reset_q15.c" hidden="true"/>
        <files mask="arm_pid_reset_q31.c" hidden="true"/>
        <files mask="arm_sin_cos_f32.c" hidden="true"/>
        <files mask="arm_sin_cos_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_cos_f32.c" hidden="true"/>
        <files mask="arm_cos_q15.c" hidden="true"/>
        <files mask="arm_cos_q31.c" hidden="true"/>
        <files mask="arm_sin_f32.c" hidden="true"/>
        <files mask="arm_sin_q15.c" hidden="true"/>
        <files mask="arm_sin_q31.c" hidden="true"/>
        <files mask="arm_sqrt_q15.c" hidden="true"/>
        <files mask="arm_sqrt_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q15.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df1_q31.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c" hidden="true"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c" hidden="true"/>
        <files mask="arm_conv_f32.c" hidden="true"/>
        <files mask="arm_conv_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_f32.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_fast_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_opt_q7.c" hidden="true"/>
        <files mask="arm_conv_partial_q15.c" hidden="true"/>
        <files mask="arm_conv_partial_q31.c" hidden="true"/>
        <files mask="arm_conv_partial_q7.c" hidden="true"/>
        <files mask="arm_conv_q15.c" hidden="true"/>
        <files mask="arm_conv_q31.c" hidden="true"/>
        <files mask="arm_conv_q7.c" hidden="true"/>
        <files mask="arm_correlate_f32.c" hidden="true"/>
        <files mask="arm_correlate_fast_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q15.c" hidden="true"/>
        <files mask="arm_correlate_fast_q31.c" hidden="true"/>
        <files mask="arm_correlate_opt_q15.c" hidden="true"/>
        <files mask="arm_correlate_opt_q7.c" hidden="true"/>
        <files mask="arm_correlate_q15.c" hidden="true"/>
        <files mask="arm_correlate_q31.c" hidden="true"/>
        <files mask="arm_correlate_q7.c" hidden="true"/>
        <files mask="arm_fir_decimate_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_decimate_q15.c" hidden="true"/>
        <files mask="arm_fir_decimate_q31.c" hidden="true"/>
        <files mask="arm_fir_f32.c" hidden="true"/>
        <files mask="arm_fir_fast_q15.c" hidden="true"/>
        <files mask="arm_fir_fast_q31.c" hidden="true"/>
        <files mask="arm_fir_init_f32.c" hidden="true"/>
        <files mask="arm_fir_init_q15.c" hidden="true"/>
        <files mask="arm_fir_init_q31.c" hidden="true"/>
        <files mask="arm_fir_init_q7.c" hidden="true"/>
        <files mask="arm_fir_interpolate_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_f32.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_init_q31.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q15.c" hidden="true"/>
        <files mask="arm_fir_interpolate_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_fir_lattice_q15.c" hidden="true"/>
        <files mask="arm_fir_lattice_q31.c" hidden="true"/>
        <files mask="arm_fir_q15.c" hidden="true"/>
        <files mask="arm_fir_q31.c" hidden="true"/>
        <files mask="arm_fir_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_f32.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_init_q7.c" hidden="true"/>
        <files mask="arm_fir_sparse_q15.c" hidden="true"/>
        <files mask="arm_fir_sparse_q31.c" hidden="true"/>
        <files mask="arm_fir_sparse_q7.c" hidden="true"/>
        <files mask="arm_iir_lattice_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_f32.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_init_q31.c" hidden="true"/>
        <files mask="arm_iir_lattice_q15.c" hidden="true"/>
        <files mask="arm_iir_lattice_q31.c" hidden="true"/>
        <files mask="arm_lms_f32.c" hidden="true"/>
        <files mask="arm_lms_init_f32.c" hidden="true"/>
        <files mask="arm_lms_init_q15.c" hidden="true"/>
        <files mask="arm_lms_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_f32.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_init_q31.c" hidden="true"/>
        <files mask="arm_lms_norm_q15.c" hidden="true"/>
        <files mask="arm_lms_norm_q31.c" hidden="true"/>
        <files mask="arm_lms_q15.c" hidden="true"/>
        <files mask="arm_lms_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_mat_add_f32.c" hidden="true"/>
        <files mask="arm_mat_add_q15.c" hidden="true"/>
        <files mask="arm_mat_add_q31.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_cmplx_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_init_f32.c" hidden="true"/>
        <files mask="arm_mat_init_q15.c" hidden="true"/>
        <files mask="arm_mat_init_q31.c" hidden="true"/>
        <files mask="arm_mat_inverse_f32.c" hidden="true"/>
        <files mask="arm_mat_inverse_f64.c" hidden="true"/>
        <files mask="arm_mat_mult_f32.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_fast_q31.c" hidden="true"/>
        <files mask="arm_mat_mult_q15.c" hidden="true"/>
        <files mask="arm_mat_mult_q31.c" hidden="true"/>
        <files mask="arm_mat_scale_f32.c" hidden="true"/>
        <files mask="arm_mat_scale_q15.c" hidden="true"/>
        <files mask="arm_mat_scale_q31.c" hidden="true"/>
        <files mask="arm_mat_sub_f32.c" hidden="true"/>
        <files mask="arm_mat_sub_q15.c" hidden="true"/>
        <files mask="arm_mat_sub_q31.c" hidden="true"/>
        <files mask="arm_mat_trans_f32.c" hidden="true"/>
        <files mask="arm_mat_trans_q15.c" hidden="true"/>
        <files mask="arm_mat_trans_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_max_f32.c" hidden="true"/>
        <files mask="arm_max_q15.c" hidden="true"/>
        <files mask="arm_max_q31.c" hidden="true"/>
        <files mask="arm_max_q7.c" hidden="true"/>
        <files mask="arm_mean_f32.c" hidden="true"/>
        <files mask="arm_mean_q15.c" hidden="true"/>
        <files mask="arm_mean_q31.c" hidden="true"/>
        <files mask="arm_mean_q7.c" hidden="true"/>
        <files mask="arm_min_f32.c" hidden="true"/>
        <files mask="arm_min_q15.c" hidden="true"/>
        <files mask="arm_min_q31.c" hidden="true"/>
        <files mask="arm_min_q7.c" hidden="true"/>
        <files mask="arm_power_f32.c" hidden="true"/>
        <files mask="arm_power_q15.c" hidden="true"/>
        <files mask="arm_power_q31.c" hidden="true"/>
        <files mask="arm_power_q7.c" hidden="true"/>
        <files mask="arm_rms_f32.c" hidden="true"/>
        <files mask="arm_rms_q15.c" hidden="true"/>
        <files mask="arm_rms_q31.c" hidden="true"/>
        <files mask="arm_std_f32.c" hidden="true"/>
        <files mask="arm_std_q15.c" hidden="true"/>
        <files mask="arm_std_q31.c" hidden="true"/>
        <files mask="arm_var_f32.c" hidden="true"/>
        <files mask="arm_var_q15.c" hidden="true"/>
        <files mask="arm_var_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_copy_f32.c" hidden="true"/>
        <files mask="arm_copy_q15.c" hidden="true"/>
        <files mask="arm_copy_q31.c" hidden="true"/>
        <files mask="arm_copy_q7.c" hidden="true"/>
        <files mask="arm_fill_f32.c" hidden="true"/>
        <files mask="arm_fill_q15.c" hidden="true"/>
        <files mask="arm_fill_q31.c" hidden="true"/>
        <files mask="arm_fill_q7.c" hidden="true"/>
        <files mask="arm_float_to_q15.c" hidden="true"/>
        <files mask="arm_float_to_q31.c" hidden="true"/>
        <files mask="arm_float_to_q7.c" hidden="true"/>
        <files mask="arm_q15_to_float.c" hidden="true"/>
        <files mask="arm_q15_to_q31.c" hidden="true"/>
        <files mask="arm_q15_to_q7.c" hidden="true"/>
        <files mask="arm_q31_to_float.c" hidden="true"/>
        <files mask="arm_q31_to_q15.c" hidden="true"/>
        <files mask="arm_q31_to_q7.c" hidden="true"/>
        <files mask="arm_q7_to_float.c" hidden="true"/>
        <files mask="arm_q7_to_q15.c" hidden="true"/>
        <files mask="arm_q7_to_q31.c" hidden="true"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c" hidden="true"/>
        <files mask="arm_bitreversal2.c" hidden="true"/>
        <files mask="arm_cfft_f32.c" hidden="true"/>
        <files mask="arm_cfft_q15.c" hidden="true"/>
        <files mask="arm_cfft_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix2_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_f32.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_init_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q15.c" hidden="true"/>
        <files mask="arm_cfft_radix4_q31.c" hidden="true"/>
        <files mask="arm_cfft_radix8_f32.c" hidden="true"/>
        <files mask="arm_dct4_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_f32.c" hidden="true"/>
        <files mask="arm_dct4_init_q15.c" hidden="true"/>
        <files mask="arm_dct4_init_q31.c" hidden="true"/>
        <files mask="arm_dct4_q15.c" hidden="true"/>
        <files mask="arm_dct4_q31.c" hidden="true"/>
        <files mask="arm_rfft_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_f32.c" hidden="true"/>
        <files mask="arm_rfft_fast_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_init_f32.c" hidden="true"/>
        <files mask="arm_rfft_init_q15.c" hidden="true"/>
        <files mask="arm_rfft_init_q31.c" hidden="true"/>
        <files mask="arm_rfft_q15.c" hidden="true"/>
        <files mask="arm_rfft_q31.c" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMX8UD7" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.1" full_name="CMSIS Device API OSTick" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMX8UD7" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.1.3" full_name="CMSIS Device API RTOS2" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMX8UD7" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver CAN" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Common.MIMX8UD7" name="CMSIS_Driver_Common" brief="Access to #include Driver_Common.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Common" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="CMSIS_Driver_Include_Common_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMX8UD7" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet Common" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMX8UD7" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet MAC" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMX8UD7" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.1.0" full_name="CMSIS Driver Ethernet PHY" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Ethernet.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMX8UD7" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Flash" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MIMX8UD7" name="NXP_CMSIS_Driver_GPIO" brief="NXP Standardized GPIO Driver aligned with CMSIS style." version="2.0.0" full_name="NXP CMSIS Driver GPIO" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMX8UD7" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver I2C" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="CMSIS_Driver_Include_I2C_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMX8UD7" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver MCI" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMX8UD7" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver NAND" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMX8UD7" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.1.0" full_name="CMSIS Driver SAI" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMX8UD7" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver SPI" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="CMSIS_Driver_Include_SPI_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMX8UD7" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USART" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="CMSIS_Driver_Include_USART_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB.MIMX8UD7" name="CMSIS_Driver_USB_Common" brief="Access to #include Driver_USB.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Common" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMX8UD7" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Device" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMX8UD7" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver USB Host" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.USB.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMX8UD7" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.0.0" full_name="CMSIS Driver WiFi" devices="MIMX8UD7xxx10" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="CMSIS_Driver_Include.Common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MIMX8UD7" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="5.3.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="core_cm33.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="CMSIS_Include_core_cm_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <!--<component id="CMSIS_files.MIMX8UD7" name="CMSIS" brief="CMSIS (Cortex Microcontroller Software Interface Standard)" version="5.6.0" full_name="CMSIS" devices="MIMX8UD7xxx10" user_visible="false" type="container" package_base_path="CMSIS" project_base_path="CMSIS">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_WiFi.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/DriverTemplates" type="src">
    <files mask="Driver_SPI.c"/>
    <files mask="Driver_Flash.c"/>
    <files mask="Driver_USART.c"/>
    <files mask="Driver_SAI.c"/>
    <files mask="Driver_Storage.c"/>
    <files mask="Driver_I2C.c"/>
    <files mask="Driver_ETH_PHY.c"/>
    <files mask="Driver_ETH_MAC.c"/>
    <files mask="Driver_CAN.c"/>
    <files mask="Driver_MCI.c"/>
    <files mask="Driver_USBH.c"/>
    <files mask="Driver_USBD.c"/>
  </source>
  <source relative_path="./" type="other">
    <files mask="CMSIS.yml"/>
    <files mask="CMSIS_v2.yml"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="LICENSE.txt"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="src">
    <files mask="arm_var_q15.c"/>
    <files mask="arm_min_q31.c"/>
    <files mask="arm_mean_f32.c"/>
    <files mask="arm_max_q7.c"/>
    <files mask="arm_max_f32.c"/>
    <files mask="arm_var_f32.c"/>
    <files mask="arm_power_q7.c"/>
    <files mask="arm_rms_f32.c"/>
    <files mask="arm_max_q31.c"/>
    <files mask="arm_max_q15.c"/>
    <files mask="arm_mean_q7.c"/>
    <files mask="arm_power_f32.c"/>
    <files mask="arm_min_q7.c"/>
    <files mask="arm_std_q15.c"/>
    <files mask="arm_min_f32.c"/>
    <files mask="arm_min_q15.c"/>
    <files mask="StatisticsFunctions.c"/>
    <files mask="arm_std_q31.c"/>
    <files mask="arm_rms_q31.c"/>
    <files mask="arm_mean_q15.c"/>
    <files mask="arm_std_f32.c"/>
    <files mask="arm_power_q15.c"/>
    <files mask="arm_mean_q31.c"/>
    <files mask="arm_rms_q15.c"/>
    <files mask="arm_power_q31.c"/>
    <files mask="arm_var_q31.c"/>
  </source>
  <source relative_path="DSP/Source/StatisticsFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="src">
    <files mask="arm_cos_q31.c"/>
    <files mask="FastMathFunctions.c"/>
    <files mask="arm_sin_q31.c"/>
    <files mask="arm_sqrt_q15.c"/>
    <files mask="arm_cos_q15.c"/>
    <files mask="arm_sin_f32.c"/>
    <files mask="arm_sin_q15.c"/>
    <files mask="arm_cos_f32.c"/>
    <files mask="arm_sqrt_q31.c"/>
  </source>
  <source relative_path="DSP/Source/FastMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="src">
    <files mask="arm_cfft_radix2_f32.c"/>
    <files mask="arm_cfft_radix8_f32.c"/>
    <files mask="arm_cfft_radix2_q15.c"/>
    <files mask="arm_cfft_radix4_init_f32.c"/>
    <files mask="arm_cfft_radix4_init_q15.c"/>
    <files mask="arm_cfft_radix2_init_q15.c"/>
    <files mask="arm_rfft_init_f32.c"/>
    <files mask="arm_rfft_fast_f32.c"/>
    <files mask="arm_rfft_init_q31.c"/>
    <files mask="arm_dct4_q15.c"/>
    <files mask="arm_dct4_init_q31.c"/>
    <files mask="arm_cfft_radix2_init_f32.c"/>
    <files mask="arm_dct4_init_q15.c"/>
    <files mask="arm_dct4_q31.c"/>
    <files mask="arm_rfft_q15.c"/>
    <files mask="arm_cfft_radix4_q31.c"/>
    <files mask="arm_cfft_radix2_init_q31.c"/>
    <files mask="TransformFunctions.c"/>
    <files mask="arm_cfft_radix4_q15.c"/>
    <files mask="arm_bitreversal.c"/>
    <files mask="arm_rfft_init_q15.c"/>
    <files mask="arm_rfft_q31.c"/>
    <files mask="arm_bitreversal2.c"/>
    <files mask="arm_rfft_fast_init_f32.c"/>
    <files mask="arm_cfft_radix2_q31.c"/>
    <files mask="arm_dct4_f32.c"/>
    <files mask="arm_cfft_f32.c"/>
    <files mask="arm_rfft_f32.c"/>
    <files mask="arm_cfft_radix4_init_q31.c"/>
    <files mask="arm_cfft_q31.c"/>
    <files mask="arm_cfft_q15.c"/>
    <files mask="arm_cfft_radix4_f32.c"/>
    <files mask="arm_dct4_init_f32.c"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="asm_include">
    <files mask="arm_bitreversal2.S"/>
  </source>
  <source relative_path="DSP/Source/TransformFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="src">
    <files mask="arm_iir_lattice_q15.c"/>
    <files mask="arm_iir_lattice_init_q15.c"/>
    <files mask="arm_fir_interpolate_q15.c"/>
    <files mask="arm_correlate_fast_q15.c"/>
    <files mask="arm_lms_norm_init_q15.c"/>
    <files mask="arm_fir_sparse_f32.c"/>
    <files mask="arm_fir_interpolate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
    <files mask="arm_iir_lattice_init_q31.c"/>
    <files mask="arm_fir_decimate_q31.c"/>
    <files mask="arm_fir_interpolate_q31.c"/>
    <files mask="arm_fir_decimate_init_f32.c"/>
    <files mask="arm_correlate_fast_opt_q15.c"/>
    <files mask="arm_lms_q31.c"/>
    <files mask="arm_lms_init_f32.c"/>
    <files mask="arm_fir_sparse_q7.c"/>
    <files mask="arm_conv_fast_opt_q15.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
    <files mask="arm_biquad_cascade_df1_init_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
    <files mask="arm_iir_lattice_f32.c"/>
    <files mask="arm_fir_lattice_f32.c"/>
    <files mask="arm_conv_partial_opt_q15.c"/>
    <files mask="arm_iir_lattice_q31.c"/>
    <files mask="arm_correlate_fast_q31.c"/>
    <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
    <files mask="arm_conv_f32.c"/>
    <files mask="arm_fir_sparse_q15.c"/>
    <files mask="arm_fir_sparse_init_q7.c"/>
    <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_f32.c"/>
    <files mask="arm_fir_sparse_init_q31.c"/>
    <files mask="arm_fir_sparse_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_q15.c"/>
    <files mask="arm_fir_lattice_q15.c"/>
    <files mask="arm_fir_decimate_init_q15.c"/>
    <files mask="arm_conv_partial_fast_opt_q15.c"/>
    <files mask="arm_fir_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
    <files mask="arm_conv_fast_q15.c"/>
    <files mask="arm_fir_fast_q15.c"/>
    <files mask="arm_conv_q7.c"/>
    <files mask="arm_fir_q15.c"/>
    <files mask="arm_correlate_q15.c"/>
    <files mask="arm_lms_init_q15.c"/>
    <files mask="arm_conv_q15.c"/>
    <files mask="arm_conv_partial_q7.c"/>
    <files mask="arm_lms_f32.c"/>
    <files mask="arm_lms_norm_q15.c"/>
    <files mask="arm_fir_sparse_init_f32.c"/>
    <files mask="arm_lms_norm_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_init_q15.c"/>
    <files mask="arm_conv_partial_fast_q15.c"/>
    <files mask="arm_fir_init_f32.c"/>
    <files mask="arm_fir_decimate_f32.c"/>
    <files mask="arm_fir_lattice_init_q15.c"/>
    <files mask="arm_correlate_opt_q15.c"/>
    <files mask="arm_fir_sparse_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f32.c"/>
    <files mask="arm_fir_init_q7.c"/>
    <files mask="arm_fir_init_q15.c"/>
    <files mask="arm_fir_interpolate_init_f32.c"/>
    <files mask="arm_conv_opt_q7.c"/>
    <files mask="arm_lms_init_q31.c"/>
    <files mask="arm_fir_fast_q31.c"/>
    <files mask="arm_conv_partial_f32.c"/>
    <files mask="arm_biquad_cascade_df1_q15.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
    <files mask="arm_lms_norm_q31.c"/>
    <files mask="arm_conv_partial_q15.c"/>
    <files mask="arm_conv_opt_q15.c"/>
    <files mask="arm_fir_decimate_q15.c"/>
    <files mask="arm_iir_lattice_init_f32.c"/>
    <files mask="arm_fir_lattice_init_f32.c"/>
    <files mask="arm_fir_decimate_fast_q31.c"/>
    <files mask="arm_fir_f32.c"/>
    <files mask="arm_fir_decimate_init_q31.c"/>
    <files mask="arm_conv_q31.c"/>
    <files mask="arm_lms_norm_f32.c"/>
    <files mask="arm_conv_partial_fast_q31.c"/>
    <files mask="arm_fir_lattice_init_q31.c"/>
    <files mask="arm_fir_init_q31.c"/>
    <files mask="arm_lms_norm_init_f32.c"/>
    <files mask="arm_correlate_opt_q7.c"/>
    <files mask="arm_fir_lattice_q31.c"/>
    <files mask="arm_conv_partial_q31.c"/>
    <files mask="arm_biquad_cascade_df2T_f64.c"/>
    <files mask="arm_biquad_cascade_df1_f32.c"/>
    <files mask="arm_lms_q15.c"/>
    <files mask="arm_correlate_q31.c"/>
    <files mask="arm_correlate_q7.c"/>
    <files mask="arm_fir_q7.c"/>
    <files mask="arm_conv_fast_q31.c"/>
    <files mask="arm_conv_partial_opt_q7.c"/>
    <files mask="arm_fir_decimate_fast_q15.c"/>
    <files mask="arm_fir_interpolate_init_q31.c"/>
    <files mask="arm_biquad_cascade_df1_q31.c"/>
    <files mask="FilteringFunctions.c"/>
    <files mask="arm_correlate_f32.c"/>
    <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
  </source>
  <source relative_path="DSP/Source/FilteringFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="src">
    <files mask="arm_sin_cos_f32.c"/>
    <files mask="ControllerFunctions.c"/>
    <files mask="arm_pid_reset_q31.c"/>
    <files mask="arm_pid_init_q15.c"/>
    <files mask="arm_sin_cos_q31.c"/>
    <files mask="arm_pid_reset_f32.c"/>
    <files mask="arm_pid_reset_q15.c"/>
    <files mask="arm_pid_init_f32.c"/>
    <files mask="arm_pid_init_q31.c"/>
  </source>
  <source relative_path="DSP/Source/ControllerFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="src">
    <files mask="arm_mat_mult_f32.c"/>
    <files mask="arm_mat_mult_fast_q31.c"/>
    <files mask="arm_mat_init_q15.c"/>
    <files mask="arm_mat_mult_fast_q15.c"/>
    <files mask="arm_mat_trans_q15.c"/>
    <files mask="arm_mat_cmplx_mult_q31.c"/>
    <files mask="arm_mat_mult_q31.c"/>
    <files mask="arm_mat_init_f32.c"/>
    <files mask="arm_mat_inverse_f32.c"/>
    <files mask="arm_mat_scale_q31.c"/>
    <files mask="arm_mat_cmplx_mult_f32.c"/>
    <files mask="arm_mat_sub_q15.c"/>
    <files mask="arm_mat_scale_f32.c"/>
    <files mask="arm_mat_sub_f32.c"/>
    <files mask="arm_mat_add_q31.c"/>
    <files mask="arm_mat_add_f32.c"/>
    <files mask="MatrixFunctions.c"/>
    <files mask="arm_mat_mult_q15.c"/>
    <files mask="arm_mat_trans_q31.c"/>
    <files mask="arm_mat_scale_q15.c"/>
    <files mask="arm_mat_sub_q31.c"/>
    <files mask="arm_mat_inverse_f64.c"/>
    <files mask="arm_mat_init_q31.c"/>
    <files mask="arm_mat_trans_f32.c"/>
    <files mask="arm_mat_cmplx_mult_q15.c"/>
    <files mask="arm_mat_add_q15.c"/>
  </source>
  <source relative_path="DSP/Source/MatrixFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="src">
    <files mask="CommonTables.c"/>
    <files mask="arm_common_tables.c"/>
    <files mask="arm_const_structs.c"/>
  </source>
  <source relative_path="DSP/Source/CommonTables" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="src">
    <files mask="SupportFunctions.c"/>
    <files mask="arm_fill_q7.c"/>
    <files mask="arm_q15_to_q7.c"/>
    <files mask="arm_copy_q15.c"/>
    <files mask="arm_copy_f32.c"/>
    <files mask="arm_q7_to_q15.c"/>
    <files mask="arm_q31_to_q15.c"/>
    <files mask="arm_copy_q7.c"/>
    <files mask="arm_q15_to_float.c"/>
    <files mask="arm_q7_to_float.c"/>
    <files mask="arm_float_to_q15.c"/>
    <files mask="arm_q15_to_q31.c"/>
    <files mask="arm_fill_f32.c"/>
    <files mask="arm_float_to_q7.c"/>
    <files mask="arm_fill_q31.c"/>
    <files mask="arm_q7_to_q31.c"/>
    <files mask="arm_q31_to_float.c"/>
    <files mask="arm_copy_q31.c"/>
    <files mask="arm_fill_q15.c"/>
    <files mask="arm_q31_to_q7.c"/>
    <files mask="arm_float_to_q31.c"/>
  </source>
  <source relative_path="DSP/Source/SupportFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="src">
    <files mask="arm_cmplx_mag_squared_f32.c"/>
    <files mask="arm_cmplx_conj_f32.c"/>
    <files mask="arm_cmplx_mag_q31.c"/>
    <files mask="arm_cmplx_conj_q31.c"/>
    <files mask="arm_cmplx_dot_prod_f32.c"/>
    <files mask="arm_cmplx_mag_q15.c"/>
    <files mask="arm_cmplx_mag_f32.c"/>
    <files mask="arm_cmplx_dot_prod_q31.c"/>
    <files mask="arm_cmplx_dot_prod_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q15.c"/>
    <files mask="arm_cmplx_mag_squared_q15.c"/>
    <files mask="arm_cmplx_conj_q15.c"/>
    <files mask="arm_cmplx_mult_real_q31.c"/>
    <files mask="arm_cmplx_mult_cmplx_f32.c"/>
    <files mask="ComplexMathFunctions.c"/>
    <files mask="arm_cmplx_mag_squared_q31.c"/>
    <files mask="arm_cmplx_mult_real_q15.c"/>
    <files mask="arm_cmplx_mult_cmplx_q31.c"/>
    <files mask="arm_cmplx_mult_real_f32.c"/>
  </source>
  <source relative_path="DSP/Source/ComplexMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="src">
    <files mask="arm_mult_f32.c"/>
    <files mask="arm_dot_prod_q31.c"/>
    <files mask="arm_sub_f32.c"/>
    <files mask="arm_sub_q15.c"/>
    <files mask="arm_shift_q7.c"/>
    <files mask="arm_abs_q7.c"/>
    <files mask="arm_abs_q31.c"/>
    <files mask="arm_mult_q31.c"/>
    <files mask="arm_dot_prod_f32.c"/>
    <files mask="arm_offset_q31.c"/>
    <files mask="arm_shift_q15.c"/>
    <files mask="arm_shift_q31.c"/>
    <files mask="arm_negate_q7.c"/>
    <files mask="arm_add_q15.c"/>
    <files mask="arm_add_q7.c"/>
    <files mask="arm_offset_f32.c"/>
    <files mask="arm_dot_prod_q15.c"/>
    <files mask="arm_mult_q7.c"/>
    <files mask="arm_dot_prod_q7.c"/>
    <files mask="arm_abs_f32.c"/>
    <files mask="arm_negate_q15.c"/>
    <files mask="arm_scale_q15.c"/>
    <files mask="arm_mult_q15.c"/>
    <files mask="arm_add_q31.c"/>
    <files mask="arm_scale_q7.c"/>
    <files mask="arm_offset_q7.c"/>
    <files mask="BasicMathFunctions.c"/>
    <files mask="arm_sub_q31.c"/>
    <files mask="arm_sub_q7.c"/>
    <files mask="arm_negate_f32.c"/>
    <files mask="arm_abs_q15.c"/>
    <files mask="arm_scale_f32.c"/>
    <files mask="arm_add_f32.c"/>
    <files mask="arm_offset_q15.c"/>
    <files mask="arm_negate_q31.c"/>
    <files mask="arm_scale_q31.c"/>
  </source>
  <source relative_path="DSP/Source/BasicMathFunctions" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
</component>-->
    <component id="COPY_BSD_License.MIMX8UD7" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="MIMX8UD7xxx10" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.MIMX8UD7.MIMX8UD7" name="MIMX8UD7" brief="Devices_project_template MIMX8UD7" version="1.0.0" full_name="Devices_project_template MIMX8UD7" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMX8UD7/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMX8UD7"/>
          <component_dependency value="component.lpuart_adapter.MIMX8UD7"/>
          <component_dependency value="platform.drivers.iomuxc.MIMX8UD7"/>
          <component_dependency value="platform.drivers.reset.MIMX8UD7"/>
          <component_dependency value="platform.devices.MIMX8UD7_startup.MIMX8UD7"/>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.clock.MIMX8UD7"/>
          <component_dependency value="platform.drivers.upower.MIMX8UD7"/>
          <component_dependency value="platform.drivers.rgpio.MIMX8UD7"/>
          <component_dependency value="platform.drivers.fusion.MIMX8UD7"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMX8UD7"/>
              <component_dependency value="component.serial_manager.MIMX8UD7"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MIMX8UD7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MIMX8UD7" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="MIMX8UD7xxx10" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMX8UD7/template" project_base_path="board">
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMX8UD7" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="MIMX8UD7xxx10" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.codec_adapters.MIMX8UD7" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.codec.MIMX8UD7"/>
          <any_of>
            <component_dependency value="component.wm8960_adapter.MIMX8UD7"/>
            <component_dependency value="component.da7212_adapter.MIMX8UD7"/>
            <component_dependency value="component.sgtl_adapter.MIMX8UD7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./port" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMX8UD7" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <any_of>
            <component_dependency value="component.lpi2c_adapter.MIMX8UD7"/>
            <component_dependency value="component.i3c_adapter.MIMX8UD7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_codec_i2c_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMX8UD7" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.osa.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMX8UD7" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.dialog7212.MIMX8UD7"/>
          <component_dependency value="driver.codec.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/da7212" type="c_include"/>
        <include_path relative_path="./port" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_adapter.MIMX8UD7" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.i3c.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus.MIMX8UD7" name="i3c_bus" brief="Component i3c_bus" version="1.0.1" full_name="Component i3c_bus" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus_adapter.MIMX8UD7" name="i3c_bus_adapter" brief="Component i3c_bus_adapter" version="1.0.1" full_name="Component i3c_bus_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i3c.MIMX8UD7"/>
          <component_dependency value="component.i3c_bus.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMX8UD7" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_lists_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpi2c_adapter.MIMX8UD7" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpi2c.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_lpi2c_adapter_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpit_adapter.MIMX8UD7" name="lpit_adapter" brief="Component lpit_adapter" version="1.0.0" full_name="Component lpit_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpit.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpspi_adapter.MIMX8UD7" name="lpspi_adapter" brief="Component lpspi_adapter" version="1.0.0" full_name="Component lpspi_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/spi" project_base_path="component/spi">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpspi.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpspi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.MIMX8UD7" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lptmr.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMX8UD7" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpuart.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_lpuart_adapter_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_dma_adapter.MIMX8UD7" name="lpuart_dma_adapter" brief="Component lpuart_dma_adapter" version="1.0.0" full_name="lpuart_dma_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <defines>
        <define name="HAL_UART_DMA_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX8UD7"/>
          <component_dependency value="component.timer_manager.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpuart_edma.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMX8UD7" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMX8UD7" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mrt_adapter.MIMX8UD7" name="mrt_adapter" brief="Component mrt_adapter" version="1.0.0" full_name="Component mrt_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.mrt.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mrt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMX8UD7" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MIMX8UD7" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MIMX8UD7" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMX8UD7" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMX8UD7" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MIMX8UD7" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMX8UD7" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_free_rtos.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMX8UD7" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="utility.debug_console.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_tpm_adapter.MIMX8UD7" name="pwm_tpm_adapter" brief="Component pwm_tpm_adapter" version="1.0.0" full_name="Component pwm_tpm_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.tpm.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_tpm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_pwm_tpm_adapter_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.rtc_bbnsm_adapter.MIMX8UD7" name="rtc_bbnsm_adapter" brief="Component rtc_bbnsm_adapter" version="1.0.0" full_name="Component rtc_bbnsm_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/rtc" project_base_path="component/rtc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.bbnsm.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rtc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rtc_bbnsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_rtc_bbnsm_adapter_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMX8UD7" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MIMX8UD7"/>
            <component_dependency value="component.serial_manager_spi.MIMX8UD7"/>
            <component_dependency value="component.serial_manager_swo.MIMX8UD7"/>
            <component_dependency value="component.serial_manager_virtual.MIMX8UD7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_serial_manager_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_spi.MIMX8UD7" name="serial_manager_spi" brief="Component serial_manager_spi" version="1.0.0" full_name="Serial Manager spi" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SPI" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_MASTER" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_SLAVE" value="1"/>
        <define name="SERIAL_MANAGER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpspi.MIMX8UD7"/>
          <component_dependency value="component.lpspi_adapter.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_spi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMX8UD7" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.serial_manager.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMX8UD7" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX8UD7"/>
          <component_dependency value="component.serial_manager.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpuart.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_serial_manager_uart_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMX8UD7" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX8UD7"/>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMX8UD7" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.sgtl5000.MIMX8UD7"/>
          <component_dependency value="driver.codec.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/sgtl5000" type="c_include"/>
        <include_path relative_path="./port/" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.MIMX8UD7" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMX8UD7" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMX8UD7" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
          <any_of>
            <component_dependency value="component.tpm_adapter.MIMX8UD7"/>
            <component_dependency value="component.mrt_adapter.MIMX8UD7"/>
            <component_dependency value="component.lptmr_adapter.MIMX8UD7"/>
            <component_dependency value="component.lpit_adapter.MIMX8UD7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.tpm_adapter.MIMX8UD7" name="tpm_adapter" brief="Component tpm_adapter" version="1.0.0" full_name="Component tpm_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.tpm.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_tpm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMX8UD7" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8960.MIMX8UD7"/>
          <component_dependency value="driver.codec.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="component_wm8960_adapter_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./port/wm8960" type="c_include"/>
        <include_path relative_path="./port/" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMX8UD7_CMSIS.MIMX8UD7" name="MIMX8UD7_CMSIS" brief="Device MIMX8UD7_cmsis" version="1.0.0" full_name="Device MIMX8UD7_cmsis" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMX8UD7" project_base_path="device">
      <dependencies>
        <component_dependency value="CMSIS_Include_core_cm.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="fsl_device_registers.h"/>
        <files mask="MIMX8UD7_cm33.h"/>
        <files mask="MIMX8UD7_cm33_features.h"/>
        <files mask="system_MIMX8UD7_cm33.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="system_MIMX8UD7_cm33.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="device_MIMX8UD7_CMSIS_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
      </include_paths>
    </component>
    <component id="device.MIMX8UD7_DSP.MIMX8UD7" name="MIMX8UD7_DSP" brief="Device MIMX8UD7_dsp" version="1.0.0" full_name="Device MIMX8UD7_dsp" devices="MIMX8UD7xxx10" user_visible="true" type="other" package_base_path="devices/MIMX8UD7" project_base_path="device">
      <source relative_path="./" type="c_include">
        <files mask="MIMX8UD7_dsp0.h"/>
        <files mask="MIMX8UD7_dsp0_features.h"/>
        <files mask="system_MIMX8UD7_dsp0.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="system_MIMX8UD7_dsp0.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMX8UD7_debugger.MIMX8UD7" name="MIMX8UD7_debugger" brief="Device MIMX8UD7_debugger" version="1.0.0" full_name="Device MIMX8UD7_debugger" devices="MIMX8UD7xxx10" user_visible="true" type="debugger" package_base_path="devices/MIMX8UD7" project_base_path="MIMX8UD7">
      <source relative_path="./" type="xml" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="MIMX8UD7_cm33.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMX8UD7_linker.MIMX8UD7" name="MIMX8UD7_linker" brief="Device MIMX8UD7_linker" version="1.0.0" full_name="Device MIMX8UD7_linker" devices="MIMX8UD7xxx10" user_visible="true" type="linker" package_base_path="devices/MIMX8UD7" project_base_path="MIMX8UD7">
      <source toolchain="armgcc" relative_path="gcc" type="linker" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="MIMX8UD7xxxxx_cm33_flash.ld"/>
        <files mask="MIMX8UD7xxxxx_cm33_ram.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" type="linker" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="MIMX8UD7xxxxx_cm33_flash.icf"/>
        <files mask="MIMX8UD7xxxxx_cm33_ram.icf"/>
      </source>
    </component>
    <component id="platform.devices.MIMX8UD7_startup.MIMX8UD7" name="MIMX8UD7_startup" brief="Device MIMX8UD7_startup" version="1.0.0" full_name="Device MIMX8UD7_startup" devices="MIMX8UD7xxx10" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMX8UD7" project_base_path="startup">
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="startup_MIMX8UD7_cm33.S"/>
      </source>
      <source toolchain="iar" relative_path="iar" project_relative_path="./" type="asm_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="startup_MIMX8UD7_cm33.s"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="device_MIMX8UD7_startup_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="docs.FreeRTOS.MIMX8UD7" name="FreeRTOS documentation" brief="FreeRTOS documentation" version="1.0.0" full_name="FreeRTOS documentation" devices="MIMX8UD7xxx10" user_visible="true" type="documentation" package_base_path="docs/FreeRTOS" project_base_path="FreeRTOS">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpressoSDK and FreeRTOS OS.pdf"/>
      </source>
    </component>
    <component id="docs.MIMX8UD7.MIMX8UD7" name="MIMX8UD7" brief="Docs mimx8ud7" version="1.0.0" full_name="Docs mimx8ud7" devices="MIMX8UD7xxx10" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for EVK-MIMX8ULP.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for EVK-MIMX8ULP.pdf"/>
      </source>
    </component>
    <component id="docs.multicore.MIMX8UD7" name="docs_multicore" brief="Collection of Multicore SDK documentation" version="2.11.0" full_name="Multicore SDK documentation" devices="MIMX8UD7xxx10" user_visible="true" type="documentation" package_base_path="docs/MULTICORE" project_base_path="MULTICORE">
      <dependencies>
        <component_dependency value="middleware.multicore.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Multicore SDK (MCSDK) Release Notes.pdf"/>
        <files mask="Getting Started with Multicore SDK (MCSDK).pdf"/>
      </source>
    </component>
    <component id="docs_external.MIMX8UD7.MIMX8UD7" name="docs_external.MIMX8UD7" brief="External documentation for MIMX8UD7." version="1.0.0" full_name="External documentation" devices="MIMX8UD7xxx10" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="MCUXpresso SDK ChangeLog_MIMX8UD7.pdf"/>
        <files mask="MCUXpresso SDK API Reference Manual_MIMX8UD7.pdf"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX8UD7" type="doc">
        <files mask="dir_2bb80b1b5c19e195c3818fa09e8894d2.html"/>
        <files mask="a00203.html"/>
        <files mask="a00200.html"/>
        <files mask="a00021.html"/>
        <files mask="a00184.html"/>
        <files mask="a00205.html"/>
        <files mask="dir_20942cb2ce796836dfc1cbdfc9d8ed5a.html"/>
        <files mask="a00012.html"/>
        <files mask="a00049.html"/>
        <files mask="dir_a343a3e9cbb710280ccd0de2056b945d.html"/>
        <files mask="dir_c83995204529212f149d093e598b8cfe.html"/>
        <files mask="dir_af8a7aa45058ff29f9e1a05d6e3e2431.html"/>
        <files mask="a00041.html"/>
        <files mask="a00019.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="a00192.html"/>
        <files mask="a00006.html"/>
        <files mask="a00191.html"/>
        <files mask="a00033.html"/>
        <files mask="dir_bd6b36a5e78bd785ce8664e0ba86cf54.html"/>
        <files mask="dir_9d7943276f7f59eae0f94ff2d28103c6.html"/>
        <files mask="a00004.html"/>
        <files mask="dir_4abf89e9f673f8ecb77d953c2ad09976.html"/>
        <files mask="a00008.html"/>
        <files mask="dir_ea982a4a90bbf64c8a612131ad2f0fcb.html"/>
        <files mask="a00010.html"/>
        <files mask="dir_18783cec49cb092c03d4752076f87193.html"/>
        <files mask="a00009.html"/>
        <files mask="a00034.html"/>
        <files mask="a00208.html"/>
        <files mask="a00020.html"/>
        <files mask="a00212.html"/>
        <files mask="a00027.html"/>
        <files mask="a00189.html"/>
        <files mask="a00042.html"/>
        <files mask="dir_416fc20155a03b7bbc5728a57d236b9f.html"/>
        <files mask="tabs.css"/>
        <files mask="dir_8f5c973d26740daab895a32d43886c59.html"/>
        <files mask="dir_58e102d2449f7b3d87d5edc08313c5d7.html"/>
        <files mask="dir_a3133d333b1a52973d87e73438740fd6.html"/>
        <files mask="dir_633a86e6a6658f734e800b79d508ae19.html"/>
        <files mask="a00023.html"/>
        <files mask="dir_e1f8ecbdccb8f7891e82e2f640fb1aa5.html"/>
        <files mask="a00204.html"/>
        <files mask="dir_6241b87b985efb3ecbfd576247350533.html"/>
        <files mask="dir_dc1d449a1b08d9860d0e8ab656677732.html"/>
        <files mask="a00190.html"/>
        <files mask="a00195.html"/>
        <files mask="dir_89fd88b21369a8fc685427310a5a5fe7.html"/>
        <files mask="a00050.html"/>
        <files mask="a00182.html"/>
        <files mask="a00206.html"/>
        <files mask="a00209.html"/>
        <files mask="a00031.html"/>
        <files mask="dir_85d65e6b350e819f4cbce4598b30679b.html"/>
        <files mask="dir_0c267f045edb9b0ef64e9a860fd099c4.html"/>
        <files mask="a00015.html"/>
        <files mask="dir_e683f204d6c251cd0e483bc258ef2ba0.html"/>
        <files mask="index.html"/>
        <files mask="dir_848ba48fec923bc3c0bf8c7926036968.html"/>
        <files mask="a00048.html"/>
        <files mask="a00045.html"/>
        <files mask="a00215.html"/>
        <files mask="dir_f7e99b515278d57327e2df3b2ab543bb.html"/>
        <files mask="a00036.html"/>
        <files mask="a00017.html"/>
        <files mask="a00178.html"/>
        <files mask="dir_81cd625641a90df482300fc494d26ddb.html"/>
        <files mask="dir_3ded2de2a4b5941ec98b70e75b83aa20.html"/>
        <files mask="a00025.html"/>
        <files mask="a00194.html"/>
        <files mask="dir_83c4f67939b2e50b6dc50fe3fc259b2d.html"/>
        <files mask="dir_ea5f9633cc51d3e2a6a258aee7e636f0.html"/>
        <files mask="a00011.html"/>
        <files mask="dir_03539e9bf34fd65c5e6da2760226d874.html"/>
        <files mask="a00037.html"/>
        <files mask="a00211.html"/>
        <files mask="a00002.html"/>
        <files mask="a00029.html"/>
        <files mask="dir_b5759f6cd324301c8d375e44421eccc5.html"/>
        <files mask="a00175.html"/>
        <files mask="a00039.html"/>
        <files mask="dir_a619c3f5e1bcdc73106a059b3163c45d.html"/>
        <files mask="dir_bebc14e255be79244de9e03d794361f1.html"/>
        <files mask="a00186.html"/>
        <files mask="dir_50c0f6d3977876a8fb6acc75ece63018.html"/>
        <files mask="a00051.html"/>
        <files mask="dir_2426866ff5131730e4b84fcb05ab6c16.html"/>
        <files mask="a00177.html"/>
        <files mask="dir_4ccba0375267304b324fbddad1ed6fca.html"/>
        <files mask="dir_07b86ffc266b39efa5bbdc0e9fdb330a.html"/>
        <files mask="a00193.html"/>
        <files mask="dir_4d587534c930721bb7699d438d28eeba.html"/>
        <files mask="a00213.html"/>
        <files mask="a00044.html"/>
        <files mask="dir_bec99b35e29ee1f785745555e9f9e41a.html"/>
        <files mask="a00185.html"/>
        <files mask="a00022.html"/>
        <files mask="a00202.html"/>
        <files mask="a00179.html"/>
        <files mask="dir_b1c4d21f93a7826ef4aed70b30552b97.html"/>
        <files mask="a00207.html"/>
        <files mask="a00043.html"/>
        <files mask="a00053.html"/>
        <files mask="a00038.html"/>
        <files mask="a00013.html"/>
        <files mask="a00040.html"/>
        <files mask="dir_c5a52a81292cf9a5167198f4f346d6d9.html"/>
        <files mask="a00035.html"/>
        <files mask="a00214.html"/>
        <files mask="a00180.html"/>
        <files mask="dir_919453c527cd3b17be9d0977f49b7a97.html"/>
        <files mask="doxygen.css"/>
        <files mask="a00183.html"/>
        <files mask="dir_d5e2083f43ed3d26340cb9096d2e7724.html"/>
        <files mask="a00024.html"/>
        <files mask="a00028.html"/>
        <files mask="a00199.html"/>
        <files mask="dir_f30550e2433a9e3eaf19043f7ead6787.html"/>
        <files mask="a00047.html"/>
        <files mask="dir_b1c03c584dc84f3f7667d569a16f41a9.html"/>
        <files mask="dir_d0b0cea4c1afa919405231e98537b73c.html"/>
        <files mask="dir_c35ca6965aa29b760300e697294724bc.html"/>
        <files mask="dir_e93037527b341a9eeebd8980ff96f405.html"/>
        <files mask="a00198.html"/>
        <files mask="a00196.html"/>
        <files mask="dir_09f9dadd705c180f0f6fcba2157ed2a9.html"/>
        <files mask="dir_bf71e8795d5ec3bf1a04b9a740296e07.html"/>
        <files mask="dir_b532a1651772451ccd6119aa45deac91.html"/>
        <files mask="dir_941917524c95f00c85ae4653cfaa2b49.html"/>
        <files mask="dir_409f97388efe006bc3438b95e9edef48.html"/>
        <files mask="a00187.html"/>
        <files mask="a00181.html"/>
        <files mask="a00210.html"/>
        <files mask="a00201.html"/>
        <files mask="a00026.html"/>
        <files mask="navtree.css"/>
        <files mask="dir_e78230b9814187c44d2cfec602885c0a.html"/>
        <files mask="a00052.html"/>
        <files mask="pages.html"/>
        <files mask="a00032.html"/>
        <files mask="a00018.html"/>
        <files mask="a00016.html"/>
        <files mask="a00188.html"/>
        <files mask="dir_9986937d5c2d55a7e5d1d4820166229f.html"/>
        <files mask="dir_be95ef627628abc71b4628041dc41e83.html"/>
        <files mask="a00030.html"/>
        <files mask="a00046.html"/>
        <files mask="dir_fd2be0ed4db85d70259f5a97a935dd15.html"/>
        <files mask="a00217.html"/>
        <files mask="a00176.html"/>
        <files mask="a00197.html"/>
        <files mask="modules.html"/>
        <files mask="dir_b07b1803b08e3bfa8752acf7d436415b.html"/>
        <files mask="a00014.html"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX8UD7" type="script">
        <files mask="a00030.js"/>
        <files mask="a00023.js"/>
        <files mask="a00038.js"/>
        <files mask="navtreeindex9.js"/>
        <files mask="a00014.js"/>
        <files mask="a00185.js"/>
        <files mask="navtreeindex16.js"/>
        <files mask="a00195.js"/>
        <files mask="a00183.js"/>
        <files mask="a00036.js"/>
        <files mask="a00008.js"/>
        <files mask="a00028.js"/>
        <files mask="navtreeindex8.js"/>
        <files mask="a00035.js"/>
        <files mask="a00017.js"/>
        <files mask="a00201.js"/>
        <files mask="a00206.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="a00042.js"/>
        <files mask="a00022.js"/>
        <files mask="a00032.js"/>
        <files mask="a00033.js"/>
        <files mask="a00194.js"/>
        <files mask="a00012.js"/>
        <files mask="a00191.js"/>
        <files mask="navtreeindex10.js"/>
        <files mask="navtreeindex5.js"/>
        <files mask="a00029.js"/>
        <files mask="a00021.js"/>
        <files mask="a00041.js"/>
        <files mask="a00034.js"/>
        <files mask="a00196.js"/>
        <files mask="a00052.js"/>
        <files mask="a00039.js"/>
        <files mask="a00192.js"/>
        <files mask="a00015.js"/>
        <files mask="a00205.js"/>
        <files mask="a00010.js"/>
        <files mask="navtreeindex4.js"/>
        <files mask="a00184.js"/>
        <files mask="a00204.js"/>
        <files mask="a00009.js"/>
        <files mask="navtreeindex13.js"/>
        <files mask="a00181.js"/>
        <files mask="a00016.js"/>
        <files mask="a00047.js"/>
        <files mask="a00044.js"/>
        <files mask="a00209.js"/>
        <files mask="a00026.js"/>
        <files mask="a00193.js"/>
        <files mask="navtreeindex14.js"/>
        <files mask="a00200.js"/>
        <files mask="a00019.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="a00197.js"/>
        <files mask="navtreeindex15.js"/>
        <files mask="a00025.js"/>
        <files mask="a00013.js"/>
        <files mask="a00050.js"/>
        <files mask="a00189.js"/>
        <files mask="a00215.js"/>
        <files mask="a00043.js"/>
        <files mask="a00213.js"/>
        <files mask="a00031.js"/>
        <files mask="modules.js"/>
        <files mask="a00027.js"/>
        <files mask="navtreeindex7.js"/>
        <files mask="a00037.js"/>
        <files mask="navtreeindex6.js"/>
        <files mask="a00045.js"/>
        <files mask="resize.js"/>
        <files mask="a00018.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="a00214.js"/>
        <files mask="a00188.js"/>
        <files mask="navtreeindex17.js"/>
        <files mask="a00024.js"/>
        <files mask="a00202.js"/>
        <files mask="a00020.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="a00051.js"/>
        <files mask="a00211.js"/>
        <files mask="a00198.js"/>
        <files mask="navtreeindex18.js"/>
        <files mask="dynsections.js"/>
        <files mask="a00048.js"/>
        <files mask="a00199.js"/>
        <files mask="navtreeindex12.js"/>
        <files mask="a00046.js"/>
        <files mask="a00053.js"/>
        <files mask="a00182.js"/>
        <files mask="a00187.js"/>
        <files mask="a00210.js"/>
        <files mask="a00040.js"/>
        <files mask="a00049.js"/>
        <files mask="navtree.js"/>
        <files mask="navtreeindex11.js"/>
        <files mask="a00011.js"/>
        <files mask="jquery.js"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX8UD7/search" type="doc">
        <files mask="typedefs_73.html"/>
        <files mask="classes_77.html"/>
        <files mask="all_68.html"/>
        <files mask="classes_6c.html"/>
        <files mask="variables_6f.html"/>
        <files mask="variables_6d.html"/>
        <files mask="all_6c.html"/>
        <files mask="classes_63.html"/>
        <files mask="enums_77.html"/>
        <files mask="classes_61.html"/>
        <files mask="variables_69.html"/>
        <files mask="classes_70.html"/>
        <files mask="groups_67.html"/>
        <files mask="typedefs_66.html"/>
        <files mask="functions_63.html"/>
        <files mask="all_64.html"/>
        <files mask="functions_6d.html"/>
        <files mask="variables_73.html"/>
        <files mask="all_63.html"/>
        <files mask="functions_69.html"/>
        <files mask="functions_6c.html"/>
        <files mask="classes_71.html"/>
        <files mask="functions_74.html"/>
        <files mask="enums_70.html"/>
        <files mask="variables_6b.html"/>
        <files mask="variables_75.html"/>
        <files mask="all_74.html"/>
        <files mask="enums_6c.html"/>
        <files mask="groups_65.html"/>
        <files mask="variables_78.html"/>
        <files mask="all_73.html"/>
        <files mask="all_79.html"/>
        <files mask="all_6f.html"/>
        <files mask="pages_74.html"/>
        <files mask="pages_69.html"/>
        <files mask="enums_64.html"/>
        <files mask="search.css"/>
        <files mask="variables_70.html"/>
        <files mask="variables_6c.html"/>
        <files mask="classes_74.html"/>
        <files mask="variables_68.html"/>
        <files mask="functions_68.html"/>
        <files mask="all_70.html"/>
        <files mask="classes_66.html"/>
        <files mask="classes_64.html"/>
        <files mask="functions_6e.html"/>
        <files mask="typedefs_65.html"/>
        <files mask="variables_63.html"/>
        <files mask="enums_65.html"/>
        <files mask="functions_71.html"/>
        <files mask="variables_61.html"/>
        <files mask="groups_75.html"/>
        <files mask="variables_79.html"/>
        <files mask="enums_71.html"/>
        <files mask="all_65.html"/>
        <files mask="all_67.html"/>
        <files mask="functions_65.html"/>
        <files mask="variables_62.html"/>
        <files mask="enums_63.html"/>
        <files mask="classes_69.html"/>
        <files mask="variables_65.html"/>
        <files mask="enums_6d.html"/>
        <files mask="enums_5f.html"/>
        <files mask="enums_74.html"/>
        <files mask="all_6e.html"/>
        <files mask="typedefs_71.html"/>
        <files mask="all_75.html"/>
        <files mask="enums_61.html"/>
        <files mask="groups_64.html"/>
        <files mask="nomatches.html"/>
        <files mask="all_77.html"/>
        <files mask="groups_71.html"/>
        <files mask="groups_66.html"/>
        <files mask="all_62.html"/>
        <files mask="variables_5f.html"/>
        <files mask="groups_6d.html"/>
        <files mask="groups_77.html"/>
        <files mask="enums_67.html"/>
        <files mask="groups_6c.html"/>
        <files mask="typedefs_6e.html"/>
        <files mask="pages_64.html"/>
        <files mask="functions_66.html"/>
        <files mask="variables_6e.html"/>
        <files mask="all_66.html"/>
        <files mask="groups_69.html"/>
        <files mask="variables_71.html"/>
        <files mask="variables_64.html"/>
        <files mask="variables_66.html"/>
        <files mask="typedefs_6c.html"/>
        <files mask="all_69.html"/>
        <files mask="all_5f.html"/>
        <files mask="groups_73.html"/>
        <files mask="functions_77.html"/>
        <files mask="all_78.html"/>
        <files mask="classes_73.html"/>
        <files mask="classes_5f.html"/>
        <files mask="functions_70.html"/>
        <files mask="functions_64.html"/>
        <files mask="groups_72.html"/>
        <files mask="groups_61.html"/>
        <files mask="enums_66.html"/>
        <files mask="groups_70.html"/>
        <files mask="enums_6e.html"/>
        <files mask="variables_67.html"/>
        <files mask="pages_61.html"/>
        <files mask="all_61.html"/>
        <files mask="groups_6e.html"/>
        <files mask="classes_6e.html"/>
        <files mask="variables_74.html"/>
        <files mask="groups_74.html"/>
        <files mask="classes_65.html"/>
        <files mask="all_6b.html"/>
        <files mask="all_71.html"/>
        <files mask="variables_77.html"/>
        <files mask="functions_73.html"/>
        <files mask="typedefs_63.html"/>
        <files mask="enumvalues_6b.html"/>
        <files mask="variables_76.html"/>
        <files mask="classes_67.html"/>
        <files mask="functions_67.html"/>
        <files mask="functions_61.html"/>
        <files mask="all_72.html"/>
        <files mask="all_6d.html"/>
        <files mask="all_76.html"/>
        <files mask="enums_73.html"/>
        <files mask="groups_63.html"/>
        <files mask="variables_72.html"/>
        <files mask="typedefs_70.html"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX8UD7/search" type="script">
        <files mask="groups_6e.js"/>
        <files mask="classes_70.js"/>
        <files mask="enums_6e.js"/>
        <files mask="groups_65.js"/>
        <files mask="groups_70.js"/>
        <files mask="all_64.js"/>
        <files mask="groups_71.js"/>
        <files mask="enums_67.js"/>
        <files mask="functions_65.js"/>
        <files mask="classes_74.js"/>
        <files mask="classes_71.js"/>
        <files mask="variables_6e.js"/>
        <files mask="variables_63.js"/>
        <files mask="functions_67.js"/>
        <files mask="typedefs_70.js"/>
        <files mask="variables_61.js"/>
        <files mask="enumvalues_6b.js"/>
        <files mask="variables_71.js"/>
        <files mask="groups_64.js"/>
        <files mask="all_65.js"/>
        <files mask="typedefs_65.js"/>
        <files mask="variables_77.js"/>
        <files mask="variables_67.js"/>
        <files mask="all_67.js"/>
        <files mask="variables_72.js"/>
        <files mask="functions_77.js"/>
        <files mask="enums_73.js"/>
        <files mask="search.js"/>
        <files mask="functions_6c.js"/>
        <files mask="classes_69.js"/>
        <files mask="pages_69.js"/>
        <files mask="classes_6c.js"/>
        <files mask="classes_6e.js"/>
        <files mask="classes_65.js"/>
        <files mask="functions_63.js"/>
        <files mask="variables_6b.js"/>
        <files mask="classes_64.js"/>
        <files mask="classes_5f.js"/>
        <files mask="enums_74.js"/>
        <files mask="variables_73.js"/>
        <files mask="pages_61.js"/>
        <files mask="variables_75.js"/>
        <files mask="all_6f.js"/>
        <files mask="variables_79.js"/>
        <files mask="all_66.js"/>
        <files mask="all_68.js"/>
        <files mask="enums_77.js"/>
        <files mask="typedefs_6c.js"/>
        <files mask="functions_70.js"/>
        <files mask="all_70.js"/>
        <files mask="all_6b.js"/>
        <files mask="typedefs_6e.js"/>
        <files mask="enums_65.js"/>
        <files mask="typedefs_73.js"/>
        <files mask="typedefs_63.js"/>
        <files mask="groups_63.js"/>
        <files mask="all_77.js"/>
        <files mask="classes_61.js"/>
        <files mask="all_63.js"/>
        <files mask="all_5f.js"/>
        <files mask="groups_61.js"/>
        <files mask="variables_5f.js"/>
        <files mask="all_78.js"/>
        <files mask="all_61.js"/>
        <files mask="groups_74.js"/>
        <files mask="classes_66.js"/>
        <files mask="enums_63.js"/>
        <files mask="groups_6c.js"/>
        <files mask="variables_64.js"/>
        <files mask="functions_68.js"/>
        <files mask="variables_76.js"/>
        <files mask="functions_66.js"/>
        <files mask="all_71.js"/>
        <files mask="enums_5f.js"/>
        <files mask="enums_6d.js"/>
        <files mask="functions_6e.js"/>
        <files mask="functions_61.js"/>
        <files mask="enums_70.js"/>
        <files mask="groups_66.js"/>
        <files mask="variables_69.js"/>
        <files mask="groups_73.js"/>
        <files mask="functions_71.js"/>
        <files mask="all_69.js"/>
        <files mask="variables_6f.js"/>
        <files mask="enums_64.js"/>
        <files mask="all_72.js"/>
        <files mask="all_76.js"/>
        <files mask="classes_77.js"/>
        <files mask="variables_62.js"/>
        <files mask="all_6e.js"/>
        <files mask="all_73.js"/>
        <files mask="variables_6d.js"/>
        <files mask="variables_74.js"/>
        <files mask="pages_64.js"/>
        <files mask="typedefs_71.js"/>
        <files mask="enums_61.js"/>
        <files mask="all_62.js"/>
        <files mask="enums_6c.js"/>
        <files mask="variables_68.js"/>
        <files mask="variables_6c.js"/>
        <files mask="variables_70.js"/>
        <files mask="groups_6d.js"/>
        <files mask="all_75.js"/>
        <files mask="variables_66.js"/>
        <files mask="groups_67.js"/>
        <files mask="functions_6d.js"/>
        <files mask="all_79.js"/>
        <files mask="groups_75.js"/>
        <files mask="enums_71.js"/>
        <files mask="functions_74.js"/>
        <files mask="groups_72.js"/>
        <files mask="functions_69.js"/>
        <files mask="all_6d.js"/>
        <files mask="enums_66.js"/>
        <files mask="variables_78.js"/>
        <files mask="functions_73.js"/>
        <files mask="classes_63.js"/>
        <files mask="groups_77.js"/>
        <files mask="groups_69.js"/>
        <files mask="typedefs_66.js"/>
        <files mask="classes_73.js"/>
        <files mask="classes_67.js"/>
        <files mask="pages_74.js"/>
        <files mask="variables_65.js"/>
        <files mask="functions_64.js"/>
        <files mask="all_6c.js"/>
        <files mask="all_74.js"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX8UD7/search" type="image">
        <files mask="search_r.png"/>
        <files mask="search_l.png"/>
        <files mask="mag_sel.png"/>
        <files mask="close.png"/>
        <files mask="search_m.png"/>
      </source>
      <source relative_path="MCUXpresso SDK API Reference Manual_MIMX8UD7" type="image">
        <files mask="ftv2vertline.png"/>
        <files mask="ftv2node.png"/>
        <files mask="tab_b.png"/>
        <files mask="ftv2blank.png"/>
        <files mask="Kinetis_SDK_Block_Diagram.jpg"/>
        <files mask="ftv2plastnode.png"/>
        <files mask="ftv2mo.png"/>
        <files mask="bc_s.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="nav_h.png"/>
        <files mask="fs_logo.gif"/>
        <files mask="debug_console_overview.jpg"/>
        <files mask="tab_a.png"/>
        <files mask="bdwn.png"/>
        <files mask="ftv2folderopen.png"/>
        <files mask="sync_off.png"/>
        <files mask="ftv2mlastnode.png"/>
        <files mask="tab_s.png"/>
        <files mask="ftv2ns.png"/>
        <files mask="ftv2mnode.png"/>
        <files mask="ftv2folderclosed.png"/>
        <files mask="open.png"/>
        <files mask="ftv2doc.png"/>
        <files mask="ftv2lastnode.png"/>
        <files mask="tab_h.png"/>
        <files mask="arm_logo.png"/>
        <files mask="closed.png"/>
        <files mask="ftv2splitbar.png"/>
        <files mask="ftv2pnode.png"/>
        <files mask="ftv2link.png"/>
        <files mask="ftv2cl.png"/>
        <files mask="nav_g.png"/>
        <files mask="sync_on.png"/>
        <files mask="nav_f.png"/>
        <files mask="doxygen.png"/>
      </source>
    </component>
    <component id="platform.drivers.acmp.MIMX8UD7" name="acmp" brief="ACMP Driver" version="2.0.6" full_name="ACMP Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_acmp_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.bbnsm.MIMX8UD7" name="bbnsm" brief="BBNSM Driver" version="1.0.0" full_name="BBNSM Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_bbnsm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_bbnsm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_bbnsm_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_cache64.MIMX8UD7" name="cache" brief="CACHE Driver" version="2.0.4" full_name="CACHE Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_cache_cache64_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.casper.MIMX8UD7" name="casper" brief="CASPER Driver" version="2.2.3" full_name="CASPER Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_casper.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_casper.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_casper_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMX8UD7" name="clock" brief="Clock Driver" version="2.0.0" full_name="Clock Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_clock_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMX8UD7" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.1.0" full_name="LPI2C CMSIS Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX8UD7/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX8UD7"/>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMX8UD7"/>
          <component_dependency value="RTE_Device.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_cmsis_lpi2c_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMX8UD7" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.4.0" full_name="LPSPI CMSIS Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX8UD7/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMX8UD7"/>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMX8UD7"/>
          <component_dependency value="RTE_Device.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_cmsis_lpspi_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMX8UD7" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.2.0" full_name="LPUART CMSIS Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMX8UD7/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMX8UD7"/>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMX8UD7"/>
          <component_dependency value="RTE_Device.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_cmsis_lpuart_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMX8UD7" name="codec" brief="Driver codec" version="2.3.0" full_name="Driver codec" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <any_of>
            <component_dependency value="component.wm8960_adapter.MIMX8UD7"/>
            <component_dependency value="component.codec_adapters.MIMX8UD7"/>
            <component_dependency value="component.da7212_adapter.MIMX8UD7"/>
            <component_dependency value="component.sgtl_adapter.MIMX8UD7"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_codec_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MIMX8UD7" name="common" brief="COMMON Driver" version="2.3.2" full_name="COMMON Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMX8UD7"/>
          <component_dependency value="platform.devices.MIMX8UD7_CMSIS.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="fsl_common_arm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_common_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dac12.MIMX8UD7" name="dac" brief="DAC12 Driver" version="2.1.0" full_name="DAC12 Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dac12.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dac12.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_dac12_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MIMX8UD7" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <component_dependency value="driver.video-common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_dc-fb-common_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-lcdif.MIMX8UD7" name="dc-fb-lcdif" brief="Driver dc-fb-lcdif" version="1.0.1" full_name="Driver dc-fb-lcdif" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/lcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dc-fb-common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lcdif.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_dc-fb-lcdif_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMX8UD7" name="dialog7212" brief="Driver dialog7212" version="2.2.2" full_name="Driver dialog7212" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.codec_i2c.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MIMX8UD7" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <component_dependency value="driver.video-common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_display-common_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-hx8394.MIMX8UD7" name="display-hx8394" brief="Driver display-hx8394" version="1.0.0" full_name="Driver display-hx8394" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="board_component" package_base_path="components/video/display/hx8394" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMX8UD7"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hx8394.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hx8394.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_display-hx8394_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6161.MIMX8UD7" name="display-it6161" brief="Driver display-it6161" version="1.0.0" full_name="Driver display-it6161" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="board_component" package_base_path="components/video/display/it6161" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMX8UD7"/>
          <component_dependency value="driver.video-i2c.MIMX8UD7"/>
          <component_dependency value="driver.display-common.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6161.h"/>
        <files mask="hdmi_tx.h"/>
        <files mask="mipi_rx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6161.c"/>
        <files mask="hdmi_tx.c"/>
        <files mask="mipi_rx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_display-it6161_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-mipi-dsi-cmd.MIMX8UD7" name="display-mipi-dsi-cmd" brief="Driver display-mipi-dsi-cmd" version="1.0.2" full_name="Driver display-mipi-dsi-cmd" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/video/display/mipi_dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.mipi_dsi.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_display-mipi-dsi-cmd_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68200.MIMX8UD7" name="display-rm68200" brief="Driver display-rm68200" version="1.1.1" full_name="Driver display-rm68200" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="board_component" package_base_path="components/video/display/rm68200" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMX8UD7"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68200.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68200.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_display-rm68200_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dma3.MIMX8UD7" name="dma" brief="EDMA Driver" version="2.2.5" full_name="EDMA Driver" devices="MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_dma3_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.epdc.MIMX8UD7" name="epdc" brief="PXP Driver" version="2.0.1" full_name="EPDC Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_epdc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_epdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_epdc_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.MIMX8UD7" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_ewm_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan.MIMX8UD7" name="flexcan" brief="FLEXCAN Driver" version="2.8.2" full_name="FLEXCAN Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexcan_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan_edma.MIMX8UD7" name="flexcan_edma" brief="FLEXCAN Driver" version="2.8.2" full_name="FLEXCAN EDMA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexcan.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexcan_edma_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMX8UD7" name="flexio" brief="FLEXIO Driver" version="2.0.4" full_name="FLEXIO Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexio_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera.MIMX8UD7" name="flexio_camera" brief="FLEXIO Driver" version="2.1.3" full_name="FLEXIO CAMERA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera_edma.MIMX8UD7" name="flexio_camera_edma" brief="FLEXIO CAMERA EDMA Driver" version="2.1.3" full_name="FLEXIO CAMERA EDMA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_camera.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMX8UD7" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.4.0" full_name="FLEXIO I2C Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexio_i2c_master_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMX8UD7" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMX8UD7" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.7" full_name="FLEXIO I2S EDMA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_i2s.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMX8UD7" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.0.6" full_name="FLEXIO MCULCD Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMX8UD7" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.4" full_name="FLEXIO MCULCD EDMA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_mculcd.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMX8UD7" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.2.1" full_name="FLEXIO SPI Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexio_spi_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMX8UD7" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.2.1" full_name="FLEXIO SPI EDMA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_spi.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexio_spi_edma_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMX8UD7" name="flexio_uart" brief="FLEXIO UART Driver" version="2.4.0" full_name="FLEXIO UART Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexio_uart_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMX8UD7" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio_uart.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexio_uart_edma_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMX8UD7" name="flexspi" brief="FLEXSPI Driver" version="2.3.5" full_name="FLEXSPI Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexspi_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_dma3.MIMX8UD7" name="flexspi_dma3" brief="FLEXSPI Driver" version="2.0.0" full_name="FLEXSPI DMA3 Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMX8UD7"/>
          <component_dependency value="platform.drivers.dma3.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_flexspi_dma3_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.fusion.MIMX8UD7" name="fusion" brief="fusion Driver" version="2.0.0" full_name="fusion Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fusion.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fusion.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_fusion_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMX8UD7" name="i3c" brief="I3C Driver" version="2.5.2" full_name="I3C Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_i3c_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iomuxc.MIMX8UD7" name="iomuxc" brief="IOMUXC Driver" version="2.0.0" full_name="IOMUXC Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_iomuxc_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdif.MIMX8UD7" name="lcdif" brief="LCDIF Driver" version="2.1.1" full_name="LCDIF Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lcdif_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMX8UD7" name="lpadc" brief="LPADC Driver" version="2.5.0" full_name="LPADC Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpadc_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.MIMX8UD7" name="i2c" brief="LPI2C Driver" version="2.3.1" full_name="LPI2C Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpi2c_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMX8UD7" name="i2c_edma" brief="LPI2C Driver" version="2.3.0" full_name="LPI2C Edma Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma3.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpi2c.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpi2c_edma_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MIMX8UD7" name="i2c_freertos" brief="LPI2C Driver" version="2.3.0" full_name="LPI2C Freerto Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMX8UD7"/>
          <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpi2c_freertos_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpit.MIMX8UD7" name="lpit" brief="LPIT Driver" version="2.0.2" full_name="LPIT Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpit.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpit_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.MIMX8UD7" name="lpspi" brief="LPSPI Driver" version="2.2.1" full_name="LPSPI Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpspi_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMX8UD7" name="lpspi_edma" brief="LPSPI Driver" version="2.0.5" full_name="LPSPI Edma Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma3.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpspi.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpspi_edma_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.MIMX8UD7" name="lpspi_freertos" brief="LPSPI Driver" version="2.0.5" full_name="LPSPI Freertos Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMX8UD7"/>
          <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpspi_freertos_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.MIMX8UD7" name="lptmr" brief="LPTMR Driver" version="2.1.1" full_name="LPTMR Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lptmr_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MIMX8UD7" name="lpuart" brief="LPUART Driver" version="2.5.2" full_name="LPUART Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpuart_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMX8UD7" name="lpuart_edma" brief="LPUART Driver" version="2.5.2" full_name="LPUART Edma Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma3.MIMX8UD7"/>
          <component_dependency value="platform.drivers.lpuart.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpuart_edma_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MIMX8UD7" name="lpuart_freertos" brief="LPUART Driver" version="2.5.0" full_name="LPUART Freertos Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMX8UD7"/>
          <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_lpuart_freertos_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.memory.MIMX8UD7" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi.MIMX8UD7" name="mipi_dsi" brief="MIPI DSI Driver" version="2.1.2" full_name="MIPI DSI Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="platform.drivers.soc_mipi_dsi.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_mipi_dsi_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mrt.MIMX8UD7" name="mrt" brief="MRT Driver" version="2.0.4" full_name="MRT Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_mrt_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu1.MIMX8UD7" name="mu" brief="MU Driver" version="2.1.1" full_name="MU Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_mu1_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.pca6416a.MIMX8UD7" name="pca6416a" brief="IO expander PCA6416A driver" version="1.0.0" full_name="Driver PCA6416A" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="false" type="board_component" package_base_path="components/pca6416a" project_base_path="components/pca6416a">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca6416a.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pca6416a.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_pca6416a_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm.MIMX8UD7" name="pdm" brief="PDM Driver" version="2.7.0" full_name="PDM Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_pdm_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm_edma.MIMX8UD7" name="pdm_edma" brief="PDM EDMA Driver" version="2.5.0" full_name="PDM EDMA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.pdm.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_pdm_edma_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.powerquad.MIMX8UD7" name="powerquad" brief="POWERQUAD Driver" version="2.0.4" full_name="POWERQUAD Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="CMSIS_DSP_Library.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_powerquad_data.h"/>
        <files mask="fsl_powerquad.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_powerquad_data.c"/>
        <files mask="fsl_powerquad_basic.c"/>
        <files mask="fsl_powerquad_math.c"/>
        <files mask="fsl_powerquad_matrix.c"/>
        <files mask="fsl_powerquad_filter.c"/>
        <files mask="fsl_powerquad_transform.c"/>
        <files mask="fsl_powerquad_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_powerquad_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pxp.MIMX8UD7" name="pxp" brief="PXP Driver" version="2.4.0" full_name="PXP Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pxp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pxp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_pxp_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.MIMX8UD7" name="reset" brief="Reset Driver" version="2.0.0" full_name="Reset Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_reset_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rgpio.MIMX8UD7" name="gpio" brief="RGPIO Driver" version="2.1.0" full_name="RGPIO Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rgpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rgpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_rgpio_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rtd_cmc.MIMX8UD7" name="rtd_cmc" brief="CMC Driver" version="2.0.0" full_name="rtd_cmc Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_rtd_cmc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtd_cmc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_rtd_cmc_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMX8UD7" name="sai" brief="SAI Driver" version="2.3.5" full_name="SAI Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_sai_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai_edma.MIMX8UD7" name="sai_edma" brief="SAI EDMA Driver" version="2.5.0" full_name="SAI EDMA Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dma3.MIMX8UD7"/>
          <component_dependency value="platform.drivers.sai.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_sai_edma_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMX8UD7" name="sema42" brief="SEMA42 Driver" version="2.0.2" full_name="SEMA42 Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_sema42_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sentinel.MIMX8UD7" name="sentinel" brief="Sentinel Driver" version="2.0.0" full_name="Sentinel Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sentinel.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sentinel.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_sentinel_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMX8UD7" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.codec_i2c.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_dsi.MIMX8UD7" name="soc_mipi_dsi" brief="SOC MIPI DSI Driver" version="2.0.0" full_name="SOC MIPI DSI Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_soc_mipi_dsi_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.srtm.MIMX8UD7" name="srtm" brief="Driver srtm" version="1.1.0" full_name="Driver srtm" devices="MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/srtm" project_base_path="srtm">
      <source relative_path="include" type="c_include">
        <files mask="srtm_channel.h"/>
        <files mask="srtm_defs.h"/>
        <files mask="srtm_dispatcher.h"/>
        <files mask="srtm_message.h"/>
        <files mask="srtm_peercore.h"/>
        <files mask="srtm_service.h"/>
      </source>
      <source relative_path="srtm" type="src">
        <files mask="srtm_channel.c"/>
        <files mask="srtm_dispatcher.c"/>
        <files mask="srtm_message.c"/>
        <files mask="srtm_peercore.c"/>
        <files mask="srtm_service.c"/>
      </source>
      <source relative_path="srtm" type="c_include">
        <files mask="srtm_channel_struct.h"/>
        <files mask="srtm_dispatcher_struct.h"/>
        <files mask="srtm_message_struct.h"/>
        <files mask="srtm_peercore_struct.h"/>
        <files mask="srtm_service_struct.h"/>
        <files mask="srtm_heap.h"/>
        <files mask="srtm_message_pool.h"/>
        <files mask="srtm_list.h"/>
        <files mask="srtm_mutex.h"/>
        <files mask="srtm_sem.h"/>
      </source>
      <source relative_path="port" type="src">
        <files mask="srtm_message_pool.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="srtm_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_srtm_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="srtm" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.srtm.freertos.MIMX8UD7" name="freertos" brief="Driver srtm freertos" version="1.0.0" full_name="Driver srtm freertos" devices="MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/srtm/port" project_base_path="srtm/port">
      <dependencies>
        <component_dependency value="driver.srtm.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="srtm_heap_freertos.c"/>
        <files mask="srtm_mutex_freertos.c"/>
        <files mask="srtm_sem_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_srtm_freertos_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.drivers.tpm.MIMX8UD7" name="tpm" brief="TPM Driver" version="2.2.0" full_name="TPM Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tpm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tpm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_tpm_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trdc.MIMX8UD7" name="trdc" brief="TRDC Driver" version="2.1.0" full_name="TRDC Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_trdc_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trgmux.MIMX8UD7" name="trgmux" brief="TRGMUX Driver" version="2.0.1" full_name="TRGMUX Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trgmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trgmux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tstmr.MIMX8UD7" name="tstmr" brief="TSTMR Driver" version="2.0.0" full_name="TSTMR Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tstmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_tstmr_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.upower.MIMX8UD7" name="upower" brief="uPower Driver" version="2.0.0" full_name="uPower Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_upower.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_upower.c"/>
      </source>
      <source relative_path="upower" type="c_include">
        <files mask="upmu.h"/>
        <files mask="upower_api.h"/>
        <files mask="upower_defs.h"/>
        <files mask="upower_soc_defs.h"/>
      </source>
      <source relative_path="upower" type="src">
        <files mask="upower_api.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_upower_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./upower/" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MIMX8UD7" name="video-common" brief="Driver video-common" version="1.0.5" full_name="Driver video-common" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_video-common_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.video-i2c.MIMX8UD7" name="video-i2c" brief="Driver video-i2c" version="1.0.1" full_name="Driver video-i2c" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="abstraction_layer" package_base_path="components/video/i2c" project_base_path="video">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_video-i2c_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog32.MIMX8UD7" name="wdog" brief="WDOG32 Driver" version="2.0.4" full_name="WDOG32 Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog32.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog32.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_wdog32_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMX8UD7" name="wm8960" brief="Driver wm8960" version="2.2.0" full_name="Driver wm8960" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
          <component_dependency value="component.codec_i2c.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_wm8960_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wuu.MIMX8UD7" name="wuu" brief="WUU Driver" version="2.1.0" full_name="WUU Driver" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="driver" package_base_path="devices/MIMX8UD7/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_wuu.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wuu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="driver_wuu_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.MIMX8UD7" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="MIMX8UD7xxx10" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.freertos-kernel.MIMX8UD7" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="10.4.3" revision="1" full_name="FreeRTOS kernel" devices="MIMX8UD7xxx10" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.extension.MIMX8UD7"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="middleware_freertos-kernel_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.armv8m.MIMX8UD7" name="FreeRTOS port ARMv8M" brief="FreeRTOS port ARMv8M" version="10.4.3" revision="1" full_name="FreeRTOS port ARMv8M" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
      </dependencies>
      <source relative_path="portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
      </source>
      <source relative_path="portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
      <source relative_path="portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/non_secure" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/context" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/heap" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/init" type="c_include"/>
        <include_path relative_path="portable/ARMv8M/secure/macros" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_nonsecure_port.MIMX8UD7" name="cm33 nonsecure port" brief="FreeRTOS cm33 nonsecure port" version="10.4.3" revision="1" full_name="FreeRTOS cm33 nonsecure port" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMX8UD7"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="middleware_freertos-kernel_cm33_nonsecure_port_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_secure_port.MIMX8UD7" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="10.4.3" revision="1" full_name="FreeRTOS cm33 secure port" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="middleware" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
          <component_dependency value="middleware.freertos-kernel.mpu_wrappers.MIMX8UD7"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="asm_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.s"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.doc.MIMX8UD7" name="Root FreeRTOS documents." brief="FreeRTOS root documents" version="10.4.3" revision="1" full_name="FreeRTOS root documents" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="History.txt"/>
      </source>
      <source relative_path="./" type="other">
        <files mask="GitHub-FreeRTOS-Kernel-Home.url"/>
        <files mask="LICENSE.md"/>
        <files mask="Quick_Start_Guide.url"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="portable/ARMClang" type="doc">
        <files mask="Use-the-GCC-ports.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMX8UD7" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="10.4.3" revision="1" full_name="FreeRTOS NXP extension" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="middleware_freertos-kernel_extension_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMX8UD7" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="10.4.3" revision="1" full_name="FreeRTOS heap 1" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMX8UD7" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="10.4.3" revision="1" full_name="FreeRTOS heap 2" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMX8UD7" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="10.4.3" revision="1" full_name="FreeRTOS heap_3" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMX8UD7" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="10.4.3" revision="1" full_name="FreeRTOS heap 4" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="middleware_freertos-kernel_heap_4_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMX8UD7" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="10.4.3" revision="1" full_name="FreeRTOS heap 5" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMX8UD7" name="FreeRTOS MPU wrappers" brief="FreeRTOS MPU wrappers" version="10.4.3" revision="1" full_name="FreeRTOS MPU wrappers" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.secure_context.MIMX8UD7" name="secure context" brief="FreeRTOS Secure Context" version="10.4.3" revision="1" full_name="FreeRTOS Secure Context" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.template.MIMX8UD7"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="src">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33/secure" type="c_include">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="src">
        <files mask="secure_context.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.template.MIMX8UD7" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="10.4.3" revision="1" full_name="FreeRTOS configuration template" devices="MIMX8UD7xxx10" category="Operating System/FreeRTOS kernel" user_visible="false" type="project_template" package_base_path="rtos/freertos/freertos_kernel" project_base_path="freertos/freertos_kernel">
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="portasm.s"/>
      </source>
      <source exclude="true" relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source relative_path="template/ARM_CM33" project_relative_path="../../source" type="c_include" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM33" project_relative_path="../../source" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc" type="c_include" device_cores="cm33_MIMX8UD7xxx10"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.MIMX8UD7" name="mbedtls" brief="mbedTLS library" version="2.27.0" full_name="MbedTLS open source SSL library" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.template.MIMX8UD7"/>
          <component_dependency value="utility.debug_console.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="config_psa.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cmac.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="mps_reader.c"/>
        <files mask="mps_trace.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
        <files mask="psa_its_file.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_msg.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="ssl_tls13_keys.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="check_crypto_config.h"/>
        <files mask="common.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="mps_common.h"/>
        <files mask="mps_error.h"/>
        <files mask="mps_trace.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="ssl_invasive.h"/>
        <files mask="ssl_tls13_keys.h"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.empty.MIMX8UD7" name="mbedtls_empty" brief="mbedTLS Empty Crypto Accelerators Layer (do not use)" version="2.27.0" full_name="mbedTLS Empty Crypto Accelerators Layer (do not use)" devices="MIMX8UD7xxx10" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls"/>
    <component id="middleware.mbedtls.port.ksdk.MIMX8UD7" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.27.0" full_name="MbedTLS MCUX SDK port layer" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.MIMX8UD7"/>
          <component_dependency value="middleware.mbedtls.empty.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="threading_alt.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.template.MIMX8UD7" name="mbedtls_template" brief="mbedTLS Template" version="2.27.0" full_name="mbedTLS Template" devices="MIMX8UD7xxx10" user_visible="false" type="project_template" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.unused_files.MIMX8UD7" name="unused_files" brief="mbedTLS files unused by projects" version="2.27.0" full_name="MbedTLS unused files" devices="MIMX8UD7xxx10" user_visible="false" type="other" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <source exclude="true" relative_path=".github" type="other">
        <files mask="issue_template.md" hidden="true"/>
        <files mask="pull_request_template.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="3rdparty" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="3rdparty" type="asm_include">
        <files mask="Makefile.inc" hidden="true"/>
      </source>
      <source exclude="true" relative_path="ChangeLog.d" type="other">
        <files mask="00README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="configs" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="configs" type="c_include">
        <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
        <files mask="config-mini-tls1_1.h" hidden="true"/>
        <files mask="config-no-entropy.h" hidden="true"/>
        <files mask="config-suite-b.h" hidden="true"/>
        <files mask="config-symmetric-only.h" hidden="true"/>
        <files mask="config-thread.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="docs" type="doc">
        <files mask="PSACryptoDriverModelSpec.pdf" hidden="true"/>
      </source>
      <source exclude="true" relative_path="docs" type="other">
        <files mask="getting_started.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen" type="other">
        <files mask="mbedtls.doxyfile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen/input" type="c_include">
        <files mask="doc_encdec.h" hidden="true"/>
        <files mask="doc_hashing.h" hidden="true"/>
        <files mask="doc_mainpage.h" hidden="true"/>
        <files mask="doc_rng.h" hidden="true"/>
        <files mask="doc_ssltls.h" hidden="true"/>
        <files mask="doc_tcpip.h" hidden="true"/>
        <files mask="doc_x509.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="other">
        <files mask=".gitignore" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="other">
        <files mask=".gitignore" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="src">
        <files mask="crypt_and_hash.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/fuzz" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/fuzz" type="other">
        <files mask="README.md" hidden="true"/>
        <files mask="fuzz_client.options" hidden="true"/>
        <files mask="fuzz_dtlsclient.options" hidden="true"/>
        <files mask="fuzz_dtlsserver.options" hidden="true"/>
        <files mask="fuzz_privkey.options" hidden="true"/>
        <files mask="fuzz_pubkey.options" hidden="true"/>
        <files mask="fuzz_server.options" hidden="true"/>
        <files mask="fuzz_x509crl.options" hidden="true"/>
        <files mask="fuzz_x509crt.options" hidden="true"/>
        <files mask="fuzz_x509csr.options" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/fuzz" type="src">
        <files mask="common.c" hidden="true"/>
        <files mask="fuzz_client.c" hidden="true"/>
        <files mask="fuzz_dtlsclient.c" hidden="true"/>
        <files mask="fuzz_dtlsserver.c" hidden="true"/>
        <files mask="fuzz_privkey.c" hidden="true"/>
        <files mask="fuzz_pubkey.c" hidden="true"/>
        <files mask="fuzz_server.c" hidden="true"/>
        <files mask="fuzz_x509crl.c" hidden="true"/>
        <files mask="fuzz_x509crt.c" hidden="true"/>
        <files mask="fuzz_x509csr.c" hidden="true"/>
        <files mask="onefile.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/fuzz" type="c_include">
        <files mask="common.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="src">
        <files mask="generic_sum.c" hidden="true"/>
        <files mask="hello.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="dh_prime.txt" hidden="true"/>
        <files mask="rsa_priv.txt" hidden="true"/>
        <files mask="rsa_pub.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="src">
        <files mask="dh_client.c" hidden="true"/>
        <files mask="dh_genprime.c" hidden="true"/>
        <files mask="dh_server.c" hidden="true"/>
        <files mask="ecdh_curve25519.c" hidden="true"/>
        <files mask="ecdsa.c" hidden="true"/>
        <files mask="gen_key.c" hidden="true"/>
        <files mask="key_app.c" hidden="true"/>
        <files mask="key_app_writer.c" hidden="true"/>
        <files mask="mpi_demo.c" hidden="true"/>
        <files mask="pk_decrypt.c" hidden="true"/>
        <files mask="pk_encrypt.c" hidden="true"/>
        <files mask="pk_sign.c" hidden="true"/>
        <files mask="pk_verify.c" hidden="true"/>
        <files mask="rsa_decrypt.c" hidden="true"/>
        <files mask="rsa_encrypt.c" hidden="true"/>
        <files mask="rsa_genkey.c" hidden="true"/>
        <files mask="rsa_sign.c" hidden="true"/>
        <files mask="rsa_sign_pss.c" hidden="true"/>
        <files mask="rsa_verify.c" hidden="true"/>
        <files mask="rsa_verify_pss.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="src">
        <files mask="gen_entropy.c" hidden="true"/>
        <files mask="gen_random_ctr_drbg.c" hidden="true"/>
        <files mask="gen_random_havege.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="src">
        <files mask="dtls_client.c" hidden="true"/>
        <files mask="dtls_server.c" hidden="true"/>
        <files mask="mini_client.c" hidden="true"/>
        <files mask="ssl_client1.c" hidden="true"/>
        <files mask="ssl_client2.c" hidden="true"/>
        <files mask="ssl_context_info.c" hidden="true"/>
        <files mask="ssl_fork_server.c" hidden="true"/>
        <files mask="ssl_mail_client.c" hidden="true"/>
        <files mask="ssl_pthread_server.c" hidden="true"/>
        <files mask="ssl_server.c" hidden="true"/>
        <files mask="ssl_server2.c" hidden="true"/>
        <files mask="ssl_test_common_source.c" hidden="true"/>
        <files mask="ssl_test_lib.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="c_include">
        <files mask="ssl_test_lib.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="src">
        <files mask="benchmark.c" hidden="true"/>
        <files mask="cpp_dummy_build.cpp" hidden="true"/>
        <files mask="query_compile_time_config.c" hidden="true"/>
        <files mask="query_config.c" hidden="true"/>
        <files mask="selftest.c" hidden="true"/>
        <files mask="udp_proxy.c" hidden="true"/>
        <files mask="zeroize.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="c_include">
        <files mask="query_config.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="script">
        <files mask="udp_proxy_wrapper.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="src">
        <files mask="pem2der.c" hidden="true"/>
        <files mask="strerror.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="src">
        <files mask="cert_app.c" hidden="true"/>
        <files mask="cert_req.c" hidden="true"/>
        <files mask="cert_write.c" hidden="true"/>
        <files mask="crl_app.c" hidden="true"/>
        <files mask="req_app.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="script">
        <files mask="abi_check.py" hidden="true"/>
        <files mask="apidoc_full.sh" hidden="true"/>
        <files mask="assemble_changelog.py" hidden="true"/>
        <files mask="bump_version.sh" hidden="true"/>
        <files mask="config.py" hidden="true"/>
        <files mask="ecc-heap.sh" hidden="true"/>
        <files mask="footprint.sh" hidden="true"/>
        <files mask="generate_psa_constants.py" hidden="true"/>
        <files mask="memory.sh" hidden="true"/>
        <files mask="output_env.sh" hidden="true"/>
        <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
        <files mask="windows_msbuild.bat" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="other">
        <files mask="config.pl" hidden="true"/>
        <files mask="find-mem-leak.cocci" hidden="true"/>
        <files mask="generate_errors.pl" hidden="true"/>
        <files mask="generate_features.pl" hidden="true"/>
        <files mask="generate_query_config.pl" hidden="true"/>
        <files mask="generate_visualc_files.pl" hidden="true"/>
        <files mask="massif_max.pl" hidden="true"/>
        <files mask="rename.pl" hidden="true"/>
        <files mask="rm-calloc-cast.cocci" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="other">
        <files mask="error.fmt" hidden="true"/>
        <files mask="query_config.fmt" hidden="true"/>
        <files mask="version_features.fmt" hidden="true"/>
        <files mask="vs2010-app-template.vcxproj" hidden="true"/>
        <files mask="vs2010-main-template.vcxproj" hidden="true"/>
        <files mask="vs2010-sln-template.sln" hidden="true"/>
        <files mask="vs6-app-template.dsp" hidden="true"/>
        <files mask="vs6-main-template.dsp" hidden="true"/>
        <files mask="vs6-workspace-template.dsw" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="doc">
        <files mask="rename-1.3-2.0.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/mbedtls_dev" type="script">
        <files mask="asymmetric_key_data.py" hidden="true"/>
        <files mask="c_build_helper.py" hidden="true"/>
        <files mask="crypto_knowledge.py" hidden="true"/>
        <files mask="macro_collector.py" hidden="true"/>
        <files mask="psa_storage.py" hidden="true"/>
        <files mask="test_case.py" hidden="true"/>
        <files mask="typing_util.py" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/.jenkins" type="other">
        <files mask="Jenkinsfile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="hash_file_1" hidden="true"/>
        <files mask="hash_file_2" hidden="true"/>
        <files mask="hash_file_3" hidden="true"/>
        <files mask="hash_file_4" hidden="true"/>
        <files mask="hash_file_5" hidden="true"/>
        <files mask="mpi_10" hidden="true"/>
        <files mask="mpi_too_big" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir3" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir4" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="script">
        <files mask="pre-commit.sh" hidden="true"/>
        <files mask="pre-push.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="script">
        <files mask="all-in-docker.sh" hidden="true"/>
        <files mask="all.sh" hidden="true"/>
        <files mask="analyze_outcomes.py" hidden="true"/>
        <files mask="basic-build-test.sh" hidden="true"/>
        <files mask="basic-in-docker.sh" hidden="true"/>
        <files mask="check-generated-files.sh" hidden="true"/>
        <files mask="check-names.sh" hidden="true"/>
        <files mask="check-python-files.sh" hidden="true"/>
        <files mask="check_files.py" hidden="true"/>
        <files mask="check_test_cases.py" hidden="true"/>
        <files mask="docker_env.sh" hidden="true"/>
        <files mask="doxygen.sh" hidden="true"/>
        <files mask="generate-afl-tests.sh" hidden="true"/>
        <files mask="generate_psa_tests.py" hidden="true"/>
        <files mask="generate_test_code.py" hidden="true"/>
        <files mask="list-identifiers.sh" hidden="true"/>
        <files mask="list-macros.sh" hidden="true"/>
        <files mask="list-symbols.sh" hidden="true"/>
        <files mask="mbedtls_test.py" hidden="true"/>
        <files mask="psa_collect_statuses.py" hidden="true"/>
        <files mask="scripts_path.py" hidden="true"/>
        <files mask="set_psa_test_dependencies.py" hidden="true"/>
        <files mask="test_config_script.py" hidden="true"/>
        <files mask="test_generate_test_code.py" hidden="true"/>
        <files mask="test_psa_constant_names.py" hidden="true"/>
        <files mask="travis-log-failure.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="other">
        <files mask="check-doxy-blocks.pl" hidden="true"/>
        <files mask="curves.pl" hidden="true"/>
        <files mask="depends-hashes.pl" hidden="true"/>
        <files mask="depends-pkalgs.pl" hidden="true"/>
        <files mask="gen_ctr_drbg.pl" hidden="true"/>
        <files mask="gen_gcm_decrypt.pl" hidden="true"/>
        <files mask="gen_gcm_encrypt.pl" hidden="true"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
        <files mask="key-exchanges.pl" hidden="true"/>
        <files mask="list-enum-consts.pl" hidden="true"/>
        <files mask="recursion.pl" hidden="true"/>
        <files mask="run-test-suites.pl" hidden="true"/>
        <files mask="tcp_client.pl" hidden="true"/>
        <files mask="test-ref-configs.pl" hidden="true"/>
        <files mask="test_zeroize.gdb" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/src" type="src">
        <files mask="asn1_helpers.c" hidden="true"/>
        <files mask="fake_external_rng_for_test.c" hidden="true"/>
        <files mask="helpers.c" hidden="true"/>
        <files mask="psa_crypto_helpers.c" hidden="true"/>
        <files mask="psa_exercise_key.c" hidden="true"/>
        <files mask="random.c" hidden="true"/>
        <files mask="threading_helpers.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/suites" type="other">
        <files mask="helpers.function" hidden="true"/>
        <files mask="host_test.function" hidden="true"/>
        <files mask="main_test.function" hidden="true"/>
        <files mask="target_test.function" hidden="true"/>
        <files mask="test_suite_aes.cbc.data" hidden="true"/>
        <files mask="test_suite_aes.cfb.data" hidden="true"/>
        <files mask="test_suite_aes.ecb.data" hidden="true"/>
        <files mask="test_suite_aes.function" hidden="true"/>
        <files mask="test_suite_aes.ofb.data" hidden="true"/>
        <files mask="test_suite_aes.rest.data" hidden="true"/>
        <files mask="test_suite_aes.xts.data" hidden="true"/>
        <files mask="test_suite_all.data" hidden="true"/>
        <files mask="test_suite_all.function" hidden="true"/>
        <files mask="test_suite_arc4.data" hidden="true"/>
        <files mask="test_suite_arc4.function" hidden="true"/>
        <files mask="test_suite_aria.data" hidden="true"/>
        <files mask="test_suite_aria.function" hidden="true"/>
        <files mask="test_suite_asn1parse.data" hidden="true"/>
        <files mask="test_suite_asn1parse.function" hidden="true"/>
        <files mask="test_suite_asn1write.data" hidden="true"/>
        <files mask="test_suite_asn1write.function" hidden="true"/>
        <files mask="test_suite_base64.data" hidden="true"/>
        <files mask="test_suite_base64.function" hidden="true"/>
        <files mask="test_suite_blowfish.data" hidden="true"/>
        <files mask="test_suite_blowfish.function" hidden="true"/>
        <files mask="test_suite_camellia.data" hidden="true"/>
        <files mask="test_suite_camellia.function" hidden="true"/>
        <files mask="test_suite_ccm.data" hidden="true"/>
        <files mask="test_suite_ccm.function" hidden="true"/>
        <files mask="test_suite_chacha20.data" hidden="true"/>
        <files mask="test_suite_chacha20.function" hidden="true"/>
        <files mask="test_suite_chachapoly.data" hidden="true"/>
        <files mask="test_suite_chachapoly.function" hidden="true"/>
        <files mask="test_suite_cipher.aes.data" hidden="true"/>
        <files mask="test_suite_cipher.arc4.data" hidden="true"/>
        <files mask="test_suite_cipher.aria.data" hidden="true"/>
        <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
        <files mask="test_suite_cipher.camellia.data" hidden="true"/>
        <files mask="test_suite_cipher.ccm.data" hidden="true"/>
        <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
        <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
        <files mask="test_suite_cipher.des.data" hidden="true"/>
        <files mask="test_suite_cipher.function" hidden="true"/>
        <files mask="test_suite_cipher.gcm.data" hidden="true"/>
        <files mask="test_suite_cipher.misc.data" hidden="true"/>
        <files mask="test_suite_cipher.nist_kw.data" hidden="true"/>
        <files mask="test_suite_cipher.null.data" hidden="true"/>
        <files mask="test_suite_cipher.padding.data" hidden="true"/>
        <files mask="test_suite_cmac.data" hidden="true"/>
        <files mask="test_suite_cmac.function" hidden="true"/>
        <files mask="test_suite_ctr_drbg.data" hidden="true"/>
        <files mask="test_suite_ctr_drbg.function" hidden="true"/>
        <files mask="test_suite_debug.data" hidden="true"/>
        <files mask="test_suite_debug.function" hidden="true"/>
        <files mask="test_suite_des.data" hidden="true"/>
        <files mask="test_suite_des.function" hidden="true"/>
        <files mask="test_suite_dhm.data" hidden="true"/>
        <files mask="test_suite_dhm.function" hidden="true"/>
        <files mask="test_suite_ecdh.data" hidden="true"/>
        <files mask="test_suite_ecdh.function" hidden="true"/>
        <files mask="test_suite_ecdsa.data" hidden="true"/>
        <files mask="test_suite_ecdsa.function" hidden="true"/>
        <files mask="test_suite_ecjpake.data" hidden="true"/>
        <files mask="test_suite_ecjpake.function" hidden="true"/>
        <files mask="test_suite_ecp.data" hidden="true"/>
        <files mask="test_suite_ecp.function" hidden="true"/>
        <files mask="test_suite_entropy.data" hidden="true"/>
        <files mask="test_suite_entropy.function" hidden="true"/>
        <files mask="test_suite_error.data" hidden="true"/>
        <files mask="test_suite_error.function" hidden="true"/>
        <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
        <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
        <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
        <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
        <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
        <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
        <files mask="test_suite_gcm.camellia.data" hidden="true"/>
        <files mask="test_suite_gcm.function" hidden="true"/>
        <files mask="test_suite_gcm.misc.data" hidden="true"/>
        <files mask="test_suite_hkdf.data" hidden="true"/>
        <files mask="test_suite_hkdf.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
        <files mask="test_suite_md.data" hidden="true"/>
        <files mask="test_suite_md.function" hidden="true"/>
        <files mask="test_suite_mdx.data" hidden="true"/>
        <files mask="test_suite_mdx.function" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
        <files mask="test_suite_mpi.data" hidden="true"/>
        <files mask="test_suite_mpi.function" hidden="true"/>
        <files mask="test_suite_mps.data" hidden="true"/>
        <files mask="test_suite_mps.function" hidden="true"/>
        <files mask="test_suite_net.data" hidden="true"/>
        <files mask="test_suite_net.function" hidden="true"/>
        <files mask="test_suite_nist_kw.data" hidden="true"/>
        <files mask="test_suite_nist_kw.function" hidden="true"/>
        <files mask="test_suite_oid.data" hidden="true"/>
        <files mask="test_suite_oid.function" hidden="true"/>
        <files mask="test_suite_pem.data" hidden="true"/>
        <files mask="test_suite_pem.function" hidden="true"/>
        <files mask="test_suite_pk.data" hidden="true"/>
        <files mask="test_suite_pk.function" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
        <files mask="test_suite_pkcs5.data" hidden="true"/>
        <files mask="test_suite_pkcs5.function" hidden="true"/>
        <files mask="test_suite_pkparse.data" hidden="true"/>
        <files mask="test_suite_pkparse.function" hidden="true"/>
        <files mask="test_suite_pkwrite.data" hidden="true"/>
        <files mask="test_suite_pkwrite.function" hidden="true"/>
        <files mask="test_suite_poly1305.data" hidden="true"/>
        <files mask="test_suite_poly1305.function" hidden="true"/>
        <files mask="test_suite_psa_crypto.data" hidden="true"/>
        <files mask="test_suite_psa_crypto.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_attributes.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_attributes.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_driver_wrappers.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_driver_wrappers.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_entropy.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_entropy.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_hash.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_hash.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_init.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_init.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_metadata.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_metadata.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_not_supported.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_not_supported.generated.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_not_supported.misc.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_persistent_key.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_persistent_key.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_se_driver_hal.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_se_driver_hal.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_se_driver_hal_mocks.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_se_driver_hal_mocks.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_slot_management.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_slot_management.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_storage_format.current.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_storage_format.function" hidden="true"/>
        <files mask="test_suite_psa_crypto_storage_format.misc.data" hidden="true"/>
        <files mask="test_suite_psa_crypto_storage_format.v0.data" hidden="true"/>
        <files mask="test_suite_psa_its.data" hidden="true"/>
        <files mask="test_suite_psa_its.function" hidden="true"/>
        <files mask="test_suite_random.data" hidden="true"/>
        <files mask="test_suite_random.function" hidden="true"/>
        <files mask="test_suite_rsa.data" hidden="true"/>
        <files mask="test_suite_rsa.function" hidden="true"/>
        <files mask="test_suite_shax.data" hidden="true"/>
        <files mask="test_suite_shax.function" hidden="true"/>
        <files mask="test_suite_ssl.data" hidden="true"/>
        <files mask="test_suite_ssl.function" hidden="true"/>
        <files mask="test_suite_timing.data" hidden="true"/>
        <files mask="test_suite_timing.function" hidden="true"/>
        <files mask="test_suite_version.data" hidden="true"/>
        <files mask="test_suite_version.function" hidden="true"/>
        <files mask="test_suite_x509parse.data" hidden="true"/>
        <files mask="test_suite_x509parse.function" hidden="true"/>
        <files mask="test_suite_x509write.data" hidden="true"/>
        <files mask="test_suite_x509write.function" hidden="true"/>
        <files mask="test_suite_xtea.data" hidden="true"/>
        <files mask="test_suite_xtea.function" hidden="true"/>
      </source>
      <source exclude="true" relative_path="visualc/VS2010" type="other">
        <files mask="benchmark.vcxproj" hidden="true"/>
        <files mask="cert_app.vcxproj" hidden="true"/>
        <files mask="cert_req.vcxproj" hidden="true"/>
        <files mask="cert_write.vcxproj" hidden="true"/>
        <files mask="crl_app.vcxproj" hidden="true"/>
        <files mask="crypt_and_hash.vcxproj" hidden="true"/>
        <files mask="crypto_examples.vcxproj" hidden="true"/>
        <files mask="dh_client.vcxproj" hidden="true"/>
        <files mask="dh_genprime.vcxproj" hidden="true"/>
        <files mask="dh_server.vcxproj" hidden="true"/>
        <files mask="dtls_client.vcxproj" hidden="true"/>
        <files mask="dtls_server.vcxproj" hidden="true"/>
        <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
        <files mask="ecdsa.vcxproj" hidden="true"/>
        <files mask="gen_entropy.vcxproj" hidden="true"/>
        <files mask="gen_key.vcxproj" hidden="true"/>
        <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
        <files mask="gen_random_havege.vcxproj" hidden="true"/>
        <files mask="generic_sum.vcxproj" hidden="true"/>
        <files mask="hello.vcxproj" hidden="true"/>
        <files mask="key_app.vcxproj" hidden="true"/>
        <files mask="key_app_writer.vcxproj" hidden="true"/>
        <files mask="key_ladder_demo.vcxproj" hidden="true"/>
        <files mask="mbedTLS.sln" hidden="true"/>
        <files mask="mbedTLS.vcxproj" hidden="true"/>
        <files mask="mini_client.vcxproj" hidden="true"/>
        <files mask="mpi_demo.vcxproj" hidden="true"/>
        <files mask="pem2der.vcxproj" hidden="true"/>
        <files mask="pk_decrypt.vcxproj" hidden="true"/>
        <files mask="pk_encrypt.vcxproj" hidden="true"/>
        <files mask="pk_sign.vcxproj" hidden="true"/>
        <files mask="pk_verify.vcxproj" hidden="true"/>
        <files mask="psa_constant_names.vcxproj" hidden="true"/>
        <files mask="query_compile_time_config.vcxproj" hidden="true"/>
        <files mask="req_app.vcxproj" hidden="true"/>
        <files mask="rsa_decrypt.vcxproj" hidden="true"/>
        <files mask="rsa_encrypt.vcxproj" hidden="true"/>
        <files mask="rsa_genkey.vcxproj" hidden="true"/>
        <files mask="rsa_sign.vcxproj" hidden="true"/>
        <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
        <files mask="rsa_verify.vcxproj" hidden="true"/>
        <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
        <files mask="selftest.vcxproj" hidden="true"/>
        <files mask="ssl_client1.vcxproj" hidden="true"/>
        <files mask="ssl_client2.vcxproj" hidden="true"/>
        <files mask="ssl_context_info.vcxproj" hidden="true"/>
        <files mask="ssl_fork_server.vcxproj" hidden="true"/>
        <files mask="ssl_mail_client.vcxproj" hidden="true"/>
        <files mask="ssl_server.vcxproj" hidden="true"/>
        <files mask="ssl_server2.vcxproj" hidden="true"/>
        <files mask="strerror.vcxproj" hidden="true"/>
        <files mask="udp_proxy.vcxproj" hidden="true"/>
        <files mask="zeroize.vcxproj" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="BRANCHES.md" hidden="true"/>
        <files mask="BUGS.md" hidden="true"/>
        <files mask="CONTRIBUTING.md" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="SECURITY.md" hidden="true"/>
        <files mask="SUPPORT.md" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.meta" hidden="true"/>
        <files mask="ChangeLog" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="dco.txt" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="script">
        <files mask="DartConfiguration.tcl" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.MIMX8UD7" name="multicore middleware" brief="Multicore SDK" version="2.11.0" full_name="Multicore Software Development Kit" devices="MIMX8UD7xxx10" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="multicore">
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.remoteproc.loadscript.MIMX8UD7" name="remoteproc_load_script" brief="remoteproc-load script" version="1.0.0" full_name="remoteproc-load script" devices="MIMX8UD7xxx10" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="multicore">
      <source relative_path="tools/remoteproc-load" type="other">
        <files mask="Readme.md"/>
        <files mask="remote.cfg"/>
      </source>
      <source relative_path="tools/remoteproc-load" type="script">
        <files mask="load.sh"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.MIMX8UD7" name="rpmsg_lite" brief="RPMsg-Lite" version="3.2.0" full_name="Remote Procedure Messaging Lite library" devices="MIMX8UD7xxx10" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <any_of>
          <component_dependency value="middleware.multicore.rpmsg_lite.bm.MIMX8UD7"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.freertos.MIMX8UD7"/>
        </any_of>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include">
        <files mask="rpmsg_lite.h"/>
        <files mask="rpmsg_ns.h"/>
        <files mask="llist.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_env.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/common" project_relative_path="common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
        <files mask="rpmsg_ns.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/virtio" project_relative_path="virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source relative_path="rpmsg_lite" project_relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="image">
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="rpmsg_isoosi.png" hidden="true"/>
        <files mask="rpmsg_lite_arch.png" hidden="true"/>
        <files mask="rpmsg_lite_send_receive.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="doc">
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="dir_5a30104352ef4255dc24354b02eb2d20.html" hidden="true"/>
        <files mask="dir_97aefd0d527b934f1d99a682da8fe6a9.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="group__config.html" hidden="true"/>
        <files mask="group__rpmsg__lite.html" hidden="true"/>
        <files mask="group__rpmsg__ns.html" hidden="true"/>
        <files mask="group__rpmsg__queue.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="rpmsg__default__config_8h.html" hidden="true"/>
        <files mask="rpmsg__default__config_8h_source.html" hidden="true"/>
        <files mask="rpmsg__lite_8h_source.html" hidden="true"/>
        <files mask="rpmsg__ns_8h_source.html" hidden="true"/>
        <files mask="rpmsg__queue_8h_source.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="script">
        <files mask="dynsections.js" hidden="true"/>
        <files mask="group__config.js" hidden="true"/>
        <files mask="group__rpmsg__lite.js" hidden="true"/>
        <files mask="group__rpmsg__ns.js" hidden="true"/>
        <files mask="group__rpmsg__queue.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="doc">
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="all_4.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="files_0.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
        <files mask="variables_3.html" hidden="true"/>
        <files mask="variables_4.html" hidden="true"/>
        <files mask="variables_5.html" hidden="true"/>
        <files mask="variables_6.html" hidden="true"/>
        <files mask="variables_7.html" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="script">
        <files mask="all_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
        <files mask="variables_4.js" hidden="true"/>
        <files mask="variables_5.js" hidden="true"/>
        <files mask="variables_6.js" hidden="true"/>
        <files mask="variables_7.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="middleware_multicore_rpmsg_lite_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.MIMX8UD7" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="3.2.0" full_name="RPMsg-Lite baremetal environment layer sources" devices="MIMX8UD7xxx10" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source condition="middleware.baremetal.MIMX8UD7" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/bm" project_relative_path="include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/bm" project_relative_path="include/environment/bm" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.MIMX8UD7" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="3.2.0" full_name="RPMsg-Lite FreeRTOS environment layer sources" devices="MIMX8UD7xxx10" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source condition="middleware.freertos-kernel.MIMX8UD7" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMX8UD7" relative_path="rpmsg_lite/lib/include" project_relative_path="include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMX8UD7" relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/include/environment/freertos" project_relative_path="include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="middleware_multicore_rpmsg_lite_freertos_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/environment/freertos" project_relative_path="include/environment/freertos" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imx8ulp_fusionf1_bm.MIMX8UD7" name="rpmsg_lite_imx8ulp_fusionf1_bm" brief="RPMsg-Lite for evkmimx8ulp fusion dsp baremetal application" version="3.2.0" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt595 board" devices="MIMX8UD7xxx10" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source relative_path="rpmsg_lite/lib/include/platform/imx8ulp_fusionf1" project_relative_path="include/platform/imx8ulp_fusionf1" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imx8ulp_fusionf1" project_relative_path="rpmsg_lite/porting/platform/imx8ulp_fusionf1" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imx8ulp_fusionf1" project_relative_path="include/platform/imx8ulp_fusionf1" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imx8ulp_m33_bm.MIMX8UD7" name="rpmsg_lite_imx8ulp_m33_bm" brief="RPMsg-Lite for evkmimx8ulp_m33 baremetal application" version="3.2.0" full_name="Remote Procedure Messaging Lite porting layer for evkmimx8ulp_m33 board" devices="MIMX8UD7xxx10" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source relative_path="rpmsg_lite/lib/include/platform/imx8ulp_m33" project_relative_path="porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imx8ulp_m33" project_relative_path="porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imx8ulp_m33" project_relative_path="porting" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imx8ulp_m33_freertos.MIMX8UD7" name="rpmsg_lite_imx8ulp_m33_freertos" brief="RPMsg-Lite for evkmimx8ulp_m33 FreeRTOS application" version="3.2.0" full_name="Remote Procedure Messaging Lite porting layer for evkmimx8ulp_m33 board" devices="MIMX8UD7xxx10" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMX8UD7"/>
          <component_dependency value="middleware.freertos-kernel.heap_4.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/imx8ulp_m33" project_relative_path="porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imx8ulp_m33" project_relative_path="porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="middleware_multicore_rpmsg_lite_imx8ulp_m33_freertos_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imx8ulp_m33" project_relative_path="porting" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MIMX8UD7" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="devices/MIMX8UD7/utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="utilities_misc_utilities_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMX8UD7" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="devices/MIMX8UD7/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="utility_assert_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.MIMX8UD7" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="devices/MIMX8UD7/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="utility_assert_lite_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMX8UD7" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="devices/MIMX8UD7/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX8UD7"/>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="utility_debug_console_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMX8UD7" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="devices/MIMX8UD7/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMX8UD7"/>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMX8UD7xxx10">
        <files mask="utility_debug_console_lite_MIMX8UD7_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.notifier.MIMX8UD7" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="devices/MIMX8UD7/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8UD7"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMX8UD7" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="MIMX8UD7xxx10" device_cores="cm33_MIMX8UD7xxx10" user_visible="true" type="utilities" package_base_path="devices/MIMX8UD7/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMX8UD7"/>
          <component_dependency value="component.lists.MIMX8UD7"/>
          <component_dependency value="platform.drivers.common.MIMX8UD7"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
